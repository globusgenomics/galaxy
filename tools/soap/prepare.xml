<tool id="prepare" name="prepare" version="BGISOAP: default">
    <description>- prepare data for SOAPdenovo processing</description>
    <command interpreter="python">
        prepare.py

        ## Inputs
        --input_contigs=$input_contigs
        --kmer_length=$kmer_length
        --output_prefix=$output_prefix

        ##Output
        --outfile=$outfile

        #end if
    </command>
    <requirements>
        <requirement type="package">bgisoap</requirement>
    </requirements>
    <inputs>
        <param format="input" label="Contigs" name="input_contigs" type="data"/>
        <param format="input" label="Kmer length" name="kmer_length" type="integer" value="23"/>
        <param format="input" label="Output prefix" name="output_prefix" type="text"/>
    </inputs>
    <outputs>
        <data format="tabular" name="outfile"/>
    </outputs>
    <tests>
        <test>
            <!--
                GapCloser –b config_file –a scaffold_file –o output_file
            -->
            <param name="refGenomeSource" value="indexed"/>
            <param name="indices" value="phiX"/>
            <param name="sPaired" value="single"/>
            <param ftype="fastqsanger" name="input1" value="bwa_wrapper_in1.fastqsanger"/>
            <param name="source_select" value="pre_set"/>
            <param name="suppressHeader" value="true"/>
            <output file="bwa_wrapper_out1.sam" ftype="sam" name="output" sort="True"/>
        </test>
    </tests>
    <help>
**What it does**

This module generates input data for SOAPdenovo to run &quot;map&quot; and &quot;scaff&quot; steps from Contigs generated by SOAPdenovo or other assemblers with various length of kmer.

Options:

-g [string] Prefix of output.
-K [int] Kmer length.
-c [string] Input Contigs FASTA. (Filename cannot be prefix.contig)
    </help>
</tool>