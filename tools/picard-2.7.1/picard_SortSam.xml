<tool id="picard2.7.1_SortSam" name="Sort Sam" version="@TOOL_VERSION@.0">
  <macros>
    <import>picard_macros.xml</import>
  </macros>
  <expand macro="requirements" />
  <command interpreter="python">
    picard_wrapper.py
      --input &quot;$inputFile&quot;
      -s &quot;$sort_order&quot;
      -o &quot;$outFile&quot;
      --output-format $outputFormat
      -j &quot;\$JAVA_JAR_PATH/picard.jar SortSam&quot;
  </command>
  <inputs>
    <param format="bam,sam" help="If empty, upload or import a SAM/BAM dataset." label="SAM/BAM dataset to be sorted" name="inputFile" type="data"/>
    <param label="Sort order" name="sort_order" type="select">
      <option selected="True" value="coordinate">coordinate</option>
      <option value="queryname">queryname</option>
      <option value="unsorted">unsorted</option>
    </param>
    <param checked="True" falsevalue="sam" help="Uncheck for SAM output" label="Output BAM instead of SAM" name="outputFormat" truevalue="bam" type="boolean"/>
  </inputs>
  <outputs>
    <data format="bam" label="${tool.name} on ${on_string}: ${outputFormat}" name="outFile"/>
      <change_format>
        <when format="sam" input="outputFormat" value="sam"/>
      </change_format>
  </outputs>
  <tests>
    <test>
      <!-- Command:
      java -jar ReplaceSamHeader.jar VALIDATION_STRINGENCY=LENIENT I=test-data/picard_input_tiny_coord.bam HEADER=test-data/picard_RSH_input1.bam O=picard_RSH_output1.sam
      picard_RSH_input1.bam can be made from picard_RSH_input1.sam
      -->
      <param ftype="bam" name="inputFile" value="picard_input_tiny_coord.bam"/>
      <param ftype="bam" name="headerFile" value="picard_RSH_input1.bam"/>
      <param name="outputFormat" value="False"/>
      <output file="picard_RSH_output1.sam" ftype="sam" name="outFile"/>
    </test>
    <test>
      <!-- Command:
      java -jar ReplaceSamHeader.jar VALIDATION_STRINGENCY=LENIENT I=test-data/picard_input_tiny_coord.sam HEADER=test-data/picard_RSH_input1.bam O=picard_RSH_output2.sam
      picard_RSH_input1.bam can be made from picard_RSH_input1.sam
      -->
      <param ftype="sam" name="inputFile" value="picard_input_tiny_coord.sam"/>
      <param ftype="bam" name="headerFile" value="picard_RSH_input1.bam"/>
      <param name="outputFormat" value="False"/>
      <output file="picard_RSH_output2.sam" ftype="sam" name="outFile"/>
    </test>
    <test>
      <!-- Command:
      java -jar ReplaceSamHeader.jar VALIDATION_STRINGENCY=LENIENT I=test-data/picard_input_tiny_coord.sam HEADER=test-data/picard_RSH_input1.sam O=picard_RSH_output2.bam
      -->
      <param ftype="sam" name="inputFile" value="picard_input_tiny_coord.sam"/>
      <param ftype="sam" name="headerFile" value="picard_RSH_input1.sam"/>
      <param name="outputFormat" value="True"/>
      <output file="picard_RSH_output2.bam" ftype="bam" name="outFile"/>
    </test>
  </tests>
  <help>


.. class:: infomark

**Purpose**

Read SAM and perform various fix-ups. Currently, the only fix-up it to soft-clip an alignment that hangs off the end of its reference sequence.

**Picard documentation**

This is a Galaxy wrapper for CleanSam, a part of the external package Picard-tools_.

 .. _Picard-tools: http://www.google.com/search?q=picard+samtools

**Useful for paired data only**

Likely won't do anything helpful for single end sequence data
Currently, Galaxy doesn't distinguish paired from single ended SAM/BAM so make sure
the data you choose are valid (paired end) SAM or BAM data - unless you trust this
tool not to harm your data.

-----

.. class:: infomark

**Syntax**

- **Input** - a paired read sam/bam format aligned short read data in your current history
- **Sort order** - can be used to adjust the ordering of readsÂ·
- **Title** - the title to use for all output files from this job - use it for high level metadata
- **Output Format** - either SAM or compressed as BAM

-----

.. class:: infomark

**Inputs, outputs, and parameters**

.. csv-table::

   :header-rows: 1

  Option,Description
  &quot;INPUT=File&quot;,&quot;The input file to fix. This option may be specified 0 or more times.&quot;
  &quot;OUTPUT=File&quot;,&quot;The output file to write to&quot;
  &quot;SORT_ORDER=SortOrder&quot;,&quot;Optional sort order if the OUTPUT file should be sorted differently than the INPUT file. Default value: null. Possible values: {unso
  &quot;CREATE_MD5_FILE=Boolean&quot;,&quot;Whether to create an MD5 digest for any BAM files created. Default value: false&quot;

.. class:: warningmark

**Warning on SAM/BAM quality**

Many SAM/BAM files produced externally and uploaded to Galaxy do not fully conform to SAM/BAM specifications. Galaxy deals with this by using the **LENIENT**
flag when it runs Picard, which allows reads to be discarded if they're empty or don't map. This appears
to be the only way to deal with SAM/BAM that cannot be parsed.


  </help>
</tool>
