<tool id="breakseq_tool_swift" name="breakseq" version="2.2">
	<requirements>
		<requirement type="package">breakseq2</requirement>
                <requirement type="package">pymodules</requirement>
                <requirement type="package">swift</requirement>
                <requirement type="package">bwa</requirement>
                <requirement type="package">samtools</requirement>
	</requirements>

	<description>Ultrafast and accurate nucleotide-resolution analysis of structural variants (Swift)</description>

	<!--parallelism method="basic"></parallelism-->

        <stdio>
           <regex level="warning" match="Warning: The index file is older than the data file:" source="stderr"/>
        </stdio>

        <command interpreter="python">
                breakseq_swift.py
                --out-dir $output_log.extra_files_path
                --output $output_log
                --log $output_swift_log
        #if $chromosomes:
         -p  '-chromosomes $chromosomes'
        #end if

#if $in_type.input_type == "built-in":
  -p '--reference $in_type.genome.fields.path'
#else:
  -p '--reference $in_type.input1'
#end if

    ## input files
    #if $input_dir_source.input_dir_source_type == "text":
        --input_dir ${input_dir_source.input_directory_path}
    #else:
        --input_dir_file ${input_dir_source.input_directory_path_file}
    #end if
   </command>

    <inputs>
    <conditional name="in_type">
      <param name="input_type" type="select" label="Use a built-in FASTA file or one from the history?">
        <option value="built-in">Built-in</option>
        <option value="history">History file</option>
      </param>
      <when value="built-in">
        <param name="genome" type="select" label="Select a built-in genome" help="if your genome of interest is not listed - contact Galaxy team">
          <options from_data_table="all_fasta_metasv" />
        </param>
      </when>
      <when value="history">
        <param name="input1" type="data" format="fasta" label="Input genome (FASTA format)" />
      </when>
    </conditional>

      <conditional name="input_dir_source">
        <param help="If you choose the file based method, it must contain only one line with the path for your files" label="How will you enter the directory path for your BAM/BAI files?" name="input_dir_source_type" type="select">
          <option value="text">Text Field</option>
          <option selected="True" value="file">File</option>
        </param>
        <when value="text">
          <param area="True" help="Please input the full path of the directory that contains a set of BAM files. All the BAM files will be used as input datasets." label="BAM directory path" name="input_directory_path" size="2x40" type="text"/>
        </when>
        <when value="file">
          <param format="txt" help="Must contain only one line with the path for your files" label="File containing path of the directory containing the BAM files" name="input_directory_path_file" type="data"/>
        </when>
      </conditional>
        <param name="chromosomes" type="text" label="operate on a single chromosome" value="" />
     </inputs>

     <outputs>
        <data format="html" label="${tool.name} on ${on_string} (log)" name="output_log"/>
        <data format="pdf" label="${tool.name} on ${on_string} (summary)" name="output_swift_log"/>
     </outputs>

	<!--help>
	BreakDancer, released under GPLv3, is a Cpp package that provides genome-wide detection of structural variants from next generation paired-end sequencing reads. It includes two complementary programs.
	BreakDancerMax predicts five types of structural variants: insertions, deletions, inversions, inter- and intra-chromosomal translocations from next-generation short paired-end sequencing reads using read pairs that are mapped with unexpected separation distances or orientation.
	BreakDancerMini focuses on detecting small indels (usually between 10bp and 100bp) using normally mapped read pairs.
	Please read our paper for detailed algorithmic description. http://www.nature.com/nmeth/journal/v6/n9/abs/nmeth.1363.html

	The input is a set of map files produced by a front-end aligner such as MAQ, BWA, NovoAlign and Bfast

	The output format
        =================	
	BreakDancer's output file consists of the following columns:

	1. Chromosome 1
	2. Position 1
	3. Orientation 1
	4. Chromosome 2
	5. Position 2
	6. Orientation 2
	7. Type of a SV
	8. Size of a SV
	9. Confidence Score
	10. Total number of supporting read pairs
	11. Total number of supporting read pairs from each map file
	12. Estimated allele frequency
	13. Software version
	14. The run parameters
	</help-->
</tool>
