<tool id="predixcan_impute" name="PrediXcan Prediction / Imputation " version="09-07-2016">
  <description>predict the transcriptome from a given genotype file</description>
  <requirements>
      <requirement type="package">pymodule</requirement>
      <requirement type="package">predixcan</requirement>
      <requirement type="package">tabix</requirement>
  </requirements>
  <command>
    #set $dosage_folder_path = $output.extra_files_path + "/dosage";
    mkdir $output.extra_files_path;
    mkdir $dosage_folder_path;
    #for $i, $s in enumerate( $dosages )
            ln -s ${s.file_name} chr${i}.txt; bgzip chr${i}.txt; mv chr${i}.txt.gz $dosage_folder_path;
    #end for

    PrediXcan.py
    #if str($genelist) != "None":
      --genelist $genelist
    #end if
    --predict
    --weights $weight_path.fields.path
    --output_dir $output.extra_files_path
    --dosages $dosage_folder_path
    --dosages_prefix $dosage_prefix
    --samples $samples; cp $output.extra_files_path/predicted_expression.txt $output
  </command>
  <inputs>
    <param format="txt,tabular" help="List of genes. By default it will use all available genes in model database." label="Gene list" name="genelist" type="data" optional="True"/>
    <param label="Select a weight database model" name="weight_path" type="select">
      <options from_data_table="all_transcriptome_model">
        <filter column="2" type="sort_by"/>
        <validator message="No indexes are available" type="no_options"/>
      </options>
    </param>
    <param help="A folder compressed in the tar.gz format containing dosages file."  multiple="true" label="Dosages data" name="dosages" type="data"/>
    <param help="Prefix of filenames of gzipped dosage files" label="Dosages prefix" value="chr" name="dosage_prefix" type="text"/> 
     <param format="txt" help="File in dosages directory with individual ids. Must be in same order as columns for dosages." label="Samples File" name="samples" type="data"/>
  </inputs>

  <outputs>
    <data format="txt,csv" label="${tool.name} on ${on_string}" name="output"/>
  </outputs>

  <tests>
  </tests>
  <help>
  </help>
</tool>
