<tool id="gapCloser" name="GapCloser" version="r240">
	<description>- close the gaps using the abundant pair relationships of short reads</description>
	<requirements>
    <requirement type="package">bgisoap</requirement>
  </requirements>
  <command interpreter="perl">
  	gapCloser.pl
  	$scaffold
  	$library
  	$readlength
  	$overlap
  	$thread
  	$output
  	$stat
  </command>
  <inputs>
  	<param format="input" label="scaffold sequences need to be filled" name="scaffold" type="data"/>
  	<param format="input" label="configuration file for soapDenovo" name="library" type="data"/>
  	<param label="maximal read length (&lt;=155)" max="155" name="readlength" type="integer" value="100"/>
  	<param label="overlap length to extend (&lt;=31)" max="31" name="overlap" type="integer" value="25"/>
  	<param label="number of thread to use" name="thread" type="integer" value="1"/>
  </inputs>
  <outputs>
  	<data format="fasta" label="gapCloser scaffold sequences output" name="output"/>
  	<data format="text" label="gapCloser stat output" name="stat"/>
  </outputs>
  <help>

**What it does**

GapCloser is designed to close the gaps emerging during the scaffolding process by SOAPdenovo, using the abundant pair relationships of short reads. GapCloser takes reads that have overlap to the edge of the gap and try to extend in both side.

GapCloser mainly uses read pairs with short and medium insert sizes, although the long insert PE reads (&gt;2K) may also help.

**System requirements**

GapCloser can run on 64-bit Linux systems. The memory use is mainly related to the read number and the number of unique Kmers in the reads. One read occupies 56 Bytes.

Take rice genome which is about 370M as an example, it needs about 23G memory and 2.5 hours when using 40X 100bp reads and 16 threads.

**Output**

Two files are generated by the GapCloser:

One fasta file contains scaffold sequences with gaps filled.

A table that gives the gap filling information. Each column stands for:

  1. starting position of a gap
  2. end position of a gap
  3. extend length from the left boundary
  4. extend length from the right boundary
  5. complete filled or not (1 for complete, 0 for no)
  6. extended length of reliable sequence
  7. gap length before gap filling
  8. gap length after gap filling


**More information**

For test data and more detailed information, click here_.

.. _here: http://soap.genomics.org.cn/about.html#resource2

  </help>
</tool>
