<tool id="gmap" name="GMAP" version="GMAP: default">
  <description>Genomic Mapping and Alignment Program for mRNA and EST sequences</description>
  <requirements>
    <requirement type="binary">gmap</requirement>
  </requirements>
  <version_string>gmap --version</version_string>
  <command>
    #import os,os.path
    gmap
    --nthreads=4 --ordered
    #if $refGenomeSource.genomeSource == &quot;history&quot;:
      --gseg=$refGenomeSource.ownFile
    #elif $refGenomeSource.genomeSource == &quot;gmapdb&quot;:
      #set $gmapdb = $os.listdir($refGenomeSource.gmapdb.extra_files_path)[0]
      --dir=$refGenomeSource.gmapdb.extra_files_path --db=$gmapdb
      #if $refGenomeSource.kmer != None and len($refGenomeSource.kmer.__str__) == 2:
        --kmer=$refGenomeSource.kmer
      #end if
    #else:
      --dir=$os.path.dirname($refGenomeSource.gmapindex.value) --db=$os.path.basename($refGenomeSource.gmapindex.value)
      #if $refGenomeSource.kmer != None and len($refGenomeSource.kmer.__str__) == 2:
        --kmer=$refGenomeSource.kmer
      #end if
    #end if
    #if $result.format == &quot;summary&quot;:
      --summary
    #elif $result.format == &quot;align&quot;:
      --align
    #elif $result.format == &quot;continuous&quot;:
      --continuous
    #elif $result.format == &quot;continuous-by-exon&quot;:
      --continuous-by-exon
    #elif $result.format == &quot;compress&quot;:
      --compress
    #elif $result.format == &quot;exons_dna&quot;:
      --exons=cdna
    #elif $result.format == &quot;exons_gen&quot;:
      --exons=genomic
    #elif $result.format == &quot;protein_dna&quot;:
      --protein_dna
    #elif $result.format == &quot;protein_gen&quot;:
      --protein_gen
    #elif $result.format == &quot;sam&quot;:
      --format=$result.sam_paired_read
      $result.no_sam_headers 
      #* Removed in gmap version 2011-11-30
      #if len($result.noncanonical_splices.__str__) &gt; 0
         --noncanonical-splices=$result.noncanonical_splices
      #end if
      *#
      #if len($result.read_group_id.__str__) &gt; 0
         --read-group-id=$result.read_group_id
      #end if
      #if len($result.read_group_name.__str__) &gt; 0
         --read-group-name=$result.read_group_name
      #end if
      #if len($result.read_group_library.__str__) &gt; 0
         --read-group-library=$result.read_group_library
      #end if
      #if len($result.read_group_platform.__str__) &gt; 0
         --read-group-platform=$result.read_group_platform
      #end if
    #elif $result.format != &quot;gmap&quot;:
      --format=$result.format
    #end if
    #if $computation.options == &quot;advanced&quot;:
      $computation.nosplicing
      $computation.cross_species
      #if len($computation.min_intronlength.__str__) &gt; 0
        --min-intronlength=$computation.min_intronlength
      #end if
      #if len($computation.intronlength.__str__) &gt; 0
        --intronlength=$computation.intronlength
      #end if
      #if len($computation.localsplicedist.__str__) &gt; 0
        --localsplicedist=$computation.localsplicedist
      #end if
      #if len($computation.totallength.__str__) &gt; 0
        --totallength=$computation.totallength
      #end if
      #if len($computation.trimendexons.__str__) &gt; 0
        --trimendexons=$computation.trimendexons
      #end if
      --direction=$computation.direction
      --canonical-mode=$computation.canonical
      --prunelevel=$computation.prunelevel
      --allow-close-indels=$computation.allow_close_indels
      #if len($computation.microexon_spliceprob.__str__) &gt;= 0:
        --microexon-spliceprob=$computation.microexon_spliceprob
      #end if
      #if len($computation.chimera_margin.__str__) &gt;= 0:
        --chimera-margin=$computation.chimera_margin
      #end if
    #end if
    #if $advanced.options == &quot;used&quot;:
      #if len($advanced.npaths.__str__) &gt; 0:
        --npaths=$advanced.npaths
      #end if
      #if len($advanced.suboptimal_score.__str__) &gt; 0:
        --suboptimal-score=$advanced.suboptimal_score
      #end if
      #if len($advanced.chimera_overlap.__str__) &gt; 0:
        --chimera_overlap=$advanced.chimera_overlap
      #end if
      $advanced.protein
      $advanced.tolerant
      $advanced.nolengths
      $advanced.invertmode
      #if len($advanced.introngap.__str__) &gt; 0:
        --introngap=$advanced.introngap
      #end if
      #if len($advanced.wraplength.__str__) &gt; 0:
        --wraplength=$advanced.wraplength
      #end if
    #end if
    #if $split_output == True
      $split_output
    #end if
    #if len($quality_protocol.__str__) &gt; 0:
      --quality-protocol=$quality_protocol
    #end if
    $input
    #for $i in $inputs:
      ${i.added_input}
    #end for
    #if $split_output == True
      2&gt; $gmap_stderr 
    #else
      2&gt; $gmap_stderr &gt; $output
    #end if
  </command>
  <inputs>
    <!-- Input data -->
    <param format="fasta,fastqsanger,fastqillumina" label="&lt;H2&gt;Input Sequences&lt;/H2&gt;Select an mRNA or EST dataset to map" name="input" type="data"/>
    <repeat name="inputs" title="addtional mRNA or EST dataset to map">
      <param format="fasta,fastqsanger,fastqillumina" label="" name="added_input" type="data"/>
    </repeat>
    <param label="Protocol for input quality scores" name="quality_protocol" type="select">
      <option value="">No quality scores</option>
      <option value="sanger">Sanger quality scores</option>
      <option value="illumina">Illumina quality scores</option>
    </param>

    <!-- GMAPDB for mapping -->
    <conditional name="refGenomeSource">
     <param help="Built-ins were indexed using default options" label="&lt;HR&gt;&lt;H2&gt;Map To&lt;/H2&gt;Will you map to a reference genome from your history or use a built-in index?" name="genomeSource" type="select">
        <option value="indexed">Use a built-in index</option>
        <option value="gmapdb">Use gmapdb from the history</option>
        <option value="history">Use a fasta reference sequence from the history</option>
      </param>
      <when value="indexed">
        <param help="if your genome of interest is not listed - contact Galaxy team" label="Select a reference genome" name="gmapindex" type="select">
          <options from_file="gmap_indices.loc">
            <column index="0" name="uid"/>
            <column index="1" name="dbkey"/>
            <column index="2" name="name"/>
            <column index="3" name="kmers"/>
            <column index="4" name="maps"/>
            <column index="5" name="snps"/>
            <column index="6" name="value"/>
            <filter column="3" type="sort_by"/>
          </options>
        </param>
        <param data_ref="gmapindex" help="Defaults to highest available kmer size" label="kmer size" name="kmer" type="select">
          <options from_file="gmap_indices.loc">
            <column index="3" name="name"/>
            <column index="3" name="value"/>
            <filter column="6" ref="gmapindex" type="param_value"/>
            <filter column="3" separator="," type="multiple_splitter"/>
            <filter name="" type="add_value" value=""/>
            <filter column="3" type="sort_by"/>
          </options>
        </param>
        <param data_ref="gmapindex" help="" label="Look for splicing involving known sites or known introns" name="map" type="select">
          <options from_file="gmap_indices.loc">
            <column index="4" name="name"/>
            <column index="4" name="value"/>
            <filter column="6" ref="gmapindex" type="param_value"/>
            <filter column="4" separator="," type="multiple_splitter"/>
            <filter name="" type="add_value" value=""/>
            <filter column="4" type="sort_by"/>
          </options>
        </param>
      </when>
      <when value="gmapdb">
        <param format="gmapdb" help="A GMAP database built with GMAP Build" label="Select a gmapdb" metadata_name="dbkey" name="gmapdb" type="data"/>
        <param data_ref="gmapdb" help="Defaults to highest available kmer size" label="kmer size" name="kmer" type="select">
          <options>
            <filter key="kmers" multiple="True" ref="gmapdb" separator="," type="data_meta"/>
          </options>
        </param>
        <param data_ref="gmapdb" help="" label="Use map for splicing involving known sites or known introns" name="map" type="select">
          <options>
            <filter key="maps" multiple="True" ref="gmapdb" type="data_meta"/>
          </options>
        </param>
      </when>
      <when value="history">
        <param format="fasta" help="Fasta containing genomic DNA sequence" label="Select the reference genome" metadata_name="dbkey" name="ownFile" type="data"/>
      </when>
    </conditional>

    
    <!-- Computation options -->
    <conditional name="computation">
      <param help="" label="&lt;HR&gt;Computational Settings" name="options" type="select">
        <option value="default">Use default settings</option>
        <option value="advanced">Set Computation Options</option>
      </param>
      <when value="default"/>
      <when value="advanced">
       <param checked="false" falsevalue="" help="(useful for aligning genomic sequences onto a genome)" label="Turn off splicing" name="nosplicing" truevalue="--nosplicing" type="boolean"/>
       <param help="Below this size, a genomic gap will be considered a deletion rather than an intron." label="Min length for one internal intron (default 9)." name="min_intronlength" optional="true" type="integer" value="">	
         <validator message="min_intronlength must be positive" min="0" type="in_range"/>
       </param>
       <param label="Max length for one intron (default 1000000)" name="intronlength" optional="true" type="integer" value="">	
         <validator message="intronlength must be positive" min="0" type="in_range"/>
       </param>
       <param label="Max length for known splice sites at ends of sequence (default 200000)" name="localsplicedist" optional="true" type="integer" value="">	
         <validator message="localsplicedist must be positive" min="0" type="in_range"/>
       </param>
       <param label="Max total intron length (default 2400000)" name="totallength" optional="true" type="integer" value="">	
         <validator message="totallength must be positive" min="0" type="in_range"/>
       </param>
       <param help=" default is 40, To turn off, set to a large value (greater than the query length)" label="Amount of unaligned sequence that triggers search for a chimera" name="chimera_margin" optional="true" type="integer" value="">	
         <validator message="chimera_margin must be positive" min="0" type="in_range"/>
       </param>
       <param label="cDNA direction" name="direction" type="select">	
         <option value="auto">auto</option>
         <option value="sense_force">sense_force</option>
         <option value="antisense_force">antisense_force</option>
         <option value="sense_filter">sense_filter</option>
         <option value="antisense_filter">antisense_filter</option>
       </param>
       <param label="Trim end exons with fewer than given number of matches (in nt, default 12)" name="trimendexons" optional="true" type="integer" value="">	
         <validator message="trimendexons must be positive" min="1" type="in_range"/>
       </param>
       <param checked="false" falsevalue="" help="For cross-species alignments, use a more sensitive search for canonical splicing" label="Cross-species alignment" name="cross_species" truevalue="--cross-species" type="boolean"/>
       
       <param label="Reward for canonical and semi-canonical introns" name="canonical" type="select">	
         <option value="1">high reward (default)</option>
         <option value="0">low reward</option>
         <option value="2">low reward for high-identity sequences</option>
       </param>
       <param label="Allow an insertion and deletion close to each other" name="allow_close_indels" type="select">	
         <option selected="true" value="1">yes (default)</option>
         <option value="0">no</option>
         <option value="2">only for high-quality alignments</option>
       </param>
       <param help="Allow microexons only if one of the splice site probabilities is greater than this value (default 0.90)" label="Micro Exon splice probablility threshold" name="microexon_spliceprob" optional="true" type="float" value="">	
         <validator max="1" message="slice probability between 0.00 and 1.00" min="0" type="in_range"/> 
       </param>
       <param label="Pruning level" name="prunelevel" type="select">	
         <option value="0">no pruning (default)</option>
         <option value="1">poor sequences</option>
         <option value="2">repetitive sequences</option>
         <option value="3">poor and repetitive sequences</option>
       </param>
       <!--  could do this as a config file 
       <param name="chrsubsetfile" type="data" format="fasta" label="User-supplied chromosome subset file" />
       <param name="chrsubset" type="text" label="Chromosome subset to search" />
       -->
      </when>
    </conditional>

    <!-- Advanced Settings -->
    <conditional name="advanced">
      <param help="" label="&lt;HR&gt;Advanced Settings" name="options" type="select">
        <option value="default">Use default settings</option>
        <option value="used">Set Options</option>
      </param>
      <when value="default"/>
      <when value="used">
       <param checked="false" falsevalue="" label="No intron lengths in alignment" name="nolengths" truevalue="--nolengths=true" type="boolean"/>
       <param help="" label=" Mode for alignments to genomic (-) strand" name="invertmode" type="select">
        <option value="">Don't invert the cDNA (default)</option>
        <option value="--invertmode=1">Invert cDNA and print genomic (-) strand</option>
        <option value="--invertmode=2">Invert cDNA and print genomic (+) strand</option>
       </param>
       <param label="Nucleotides to show on each end of intron (default=3)" name="introngap" optional="true" type="integer" value="">	
         <validator message="introngap must be positive" min="0" type="in_range"/>
       </param>
       <param label="Line Wrap length for alignment (default=50)" name="wraplength" optional="true" type="integer" value="">	
         <validator message="wraplength must be positive" min="1" type="in_range"/>
       </param>
       <param label="Maximum number of paths to show.  Ignored if negative.  If 0, prints two paths if chimera detected, else one." name="npaths" optional="true" type="integer" value="">	
         <validator message="npaths must be positive" min="0" type="in_range"/>
       </param>
       <param help="By default the program prints all paths found." label="Report only paths whose score is within this value of the best path" name="suboptimal_score" optional="true" type="integer" value="">	
         <validator message="suboptimal_score must be positive" min="0" type="in_range"/>
       </param>
       <param label="Overlap to show, if any, at chimera breakpoint (default 0)" name="chimera_overlap" optional="true" type="integer" value="">	
                <validator message="chimera_overlap must be positive" min="0" type="in_range"/>
       </param>
       <param checked="false" falsevalue="" label="Translates cDNA with corrections for frameshifts" name="tolerant" truevalue="--tolerant=true" type="boolean"/>
       <param help="" label="Protein alignment" name="protein" type="select">
        <option value="">default</option>
        <option value="--fulllength=true">Assume full-length protein, starting with Met</option>
        <option value="--truncate=true">Truncate alignment around full-length protein, Met to Stop</option>
       </param>
      </when>
    </conditional>

    <!-- Output data -->
    <conditional name="result">
    <param help="" label="&lt;HR&gt;&lt;H2&gt;Output&lt;/H2&gt;Select the output format" name="format" type="select">
      <option value="gmap">GMAP default output</option>
      <option value="summary">Summary of alignments</option>
      <option value="align">Alignment</option>
      <option value="continuous">Alignment in three continuous lines</option>
      <option value="continuous-by-exon">Alignment in three lines per exon</option>
      <option value="compress">Print output in compressed format</option>
      <option value="exons_dna">Print exons cDNA</option>
      <option value="exons_gen">Print exons genomic</option>
      <option value="protein_dna">Print protein sequence (cDNA)</option>
      <option value="protein_gen">Print protein sequence (genomic)</option>
      <option value="psl">PSL (BLAT) format</option>
      <option value="gff3_gene">GFF3 gene format</option>
      <option value="gff3_match_cdna">GFF3 match cDNA format</option>
      <option value="gff3_match_est">GFF3 match EST format</option>
      <option value="splicesites">splicesites output (for GSNAP)</option>
      <option value="introns">introns output (for GSNAP)</option>
      <option value="map_exons">IIT FASTA exon map format</option>
      <option value="map_genes">IIT FASTA map format</option>
      <option value="coords">coords in table format</option>
      <option selected="true" value="sam">SAM format</option>
    </param>
      <when value="gmap">
      </when>
      <when value="summary"/>
      <when value="align">
      </when>
      <when value="continuous">
      </when>
      <when value="continuous-by-exon">
      </when>
      <when value="compress"/>
      <when value="exons_dna"/>
      <when value="exons_gen"/>
      <when value="protein_dna"/>
      <when value="protein_gen"/>
      <when value="psl"/>
      <when value="gff3_gene"/>
      <when value="gff3_match_cdna"/>
      <when value="gff3_match_est"/>
      <when value="splicesites"/>
      <when value="introns"/>
      <when value="map_exons"/>
      <when value="map_genes"/>
      <when value="coords"/>
      <when value="sam">
        <param checked="false" falsevalue="samse" label="SAM paired reads" name="sam_paired_read" truevalue="sampe" type="boolean"/>
        <param checked="false" falsevalue="" label="Do not print headers beginning with '@'" name="no_sam_headers" truevalue="--no-sam-headers" type="boolean"/>
        <!--  Removed in gmap version 2011-11-30
        <param name="noncanonical_splices" type="select" label="Print non-canonical genomic gaps greater than 20 nt in CIGAR string as STRING.">
          <option value="">Use default</option>
          <option value="N">N</option>
          <option value="D">D</option>
        </param>
        -->
        <param label="Value to put into read-group id (RG-ID) field" name="read_group_id" type="text" value=""/>
        <param label="Value to put into read-group name (RG-SM) field" name="read_group_name" type="text" value=""/>
        <param label="Value to put into read-group library (RG-LB) field" name="read_group_library" type="text" value=""/>
        <param label="Value to put into read-group library platform (RG-PL) field" name="read_group_platform" type="text" value=""/>
      </when>
    </conditional> <!-- name="result" -->

    <param checked="false" falsevalue="" help="(chimera only when chimera-margin is selected)" label="Separate outputs for nomapping, uniq, mult, and chimera" name="split_output" truevalue="--split-output=gmap_out" type="boolean"/>


    <!-- 
      map=iitfile      Map file.  If argument is '?' (with the quotes), this lists available map files.
      mapexons         Map each exon separately
      mapboth          Report hits from both strands of genome
      flanking=INT     Show flanking hits (default 0)
      print-comment    Show comment line for each hit
    -->


  </inputs>
  <outputs>
    <data format="txt" label="${tool.name} on ${on_string}: stderr" name="gmap_stderr"/>
    <data format="txt" label="${tool.name} on ${on_string} ${result.format}" name="output">
      <filter>(split_output == False)</filter>
      <change_format>
        <when format="gff3" input="result['format']" value="gff3_gene"/>
        <when format="gff3" input="result['format']" value="gff3_match_cdna"/>
        <when format="gff3" input="result['format']" value="gff3_match_est"/>
        <when format="sam" input="result['format']" value="sam"/>
        <when format="gmap_splicesites" input="result['format']" value="splicesites"/>
        <when format="gmap_introns" input="result['format']" value="introns"/>
        <when format="gmap_annotation" input="result['format']" value="map_genes"/>
        <when format="gmap_annotation" input="result['format']" value="map_exons"/>
      </change_format>
    </data>
    <data format="txt" from_work_dir="gmap_out.uniq" label="${tool.name} on ${on_string} uniq.${result.format}" name="uniq">
      <filter>(split_output == True)</filter>
      <change_format>
        <when format="gff3" input="result['format']" value="gff3_gene"/>
        <when format="gff3" input="result['format']" value="gff3_match_cdna"/>
        <when format="gff3" input="result['format']" value="gff3_match_est"/>
        <when format="sam" input="result['format']" value="sam"/>
        <when format="gmap_splicesites" input="result['format']" value="splicesites"/>
        <when format="gmap_introns" input="result['format']" value="introns"/>
        <when format="gmap_annotation" input="result['format']" value="map_genes"/>
        <when format="gmap_annotation" input="result['format']" value="map_exons"/>
      </change_format>
    </data>
    <data format="txt" from_work_dir="gmap_out.transloc" label="${tool.name} on ${on_string} transloc.${result.format}" name="transloc">
      <filter>(split_output == True)</filter>
      <change_format>
        <when format="gff3" input="result['format']" value="gff3_gene"/>
        <when format="gff3" input="result['format']" value="gff3_match_cdna"/>
        <when format="gff3" input="result['format']" value="gff3_match_est"/>
        <when format="sam" input="result['format']" value="sam"/>
        <when format="gmap_splicesites" input="result['format']" value="splicesites"/>
        <when format="gmap_introns" input="result['format']" value="introns"/>
        <when format="gmap_annotation" input="result['format']" value="map_genes"/>
        <when format="gmap_annotation" input="result['format']" value="map_exons"/>
      </change_format>
    </data>
    <data format="txt" from_work_dir="gmap_out.nomapping" label="${tool.name} on ${on_string} nomapping.${result.format}" name="nomapping">
      <filter>(split_output == True)</filter>
      <change_format>
        <when format="gff3" input="result['format']" value="gff3_gene"/>
        <when format="gff3" input="result['format']" value="gff3_match_cdna"/>
        <when format="gff3" input="result['format']" value="gff3_match_est"/>
        <when format="sam" input="result['format']" value="sam"/>
        <when format="gmap_splicesites" input="result['format']" value="splicesites"/>
        <when format="gmap_introns" input="result['format']" value="introns"/>
        <when format="gmap_annotation" input="result['format']" value="map_genes"/>
        <when format="gmap_annotation" input="result['format']" value="map_exons"/>
      </change_format>
    </data>
    <data format="txt" from_work_dir="gmap_out.mult" label="${tool.name} on ${on_string} mult.${result.format}" name="mult">
      <filter>(split_output == True)</filter>
      <change_format>
        <when format="gff3" input="result['format']" value="gff3_gene"/>
        <when format="gff3" input="result['format']" value="gff3_match_cdna"/>
        <when format="gff3" input="result['format']" value="gff3_match_est"/>
        <when format="sam" input="result['format']" value="sam"/>
        <when format="gmap_splicesites" input="result['format']" value="splicesites"/>
        <when format="gmap_introns" input="result['format']" value="introns"/>
        <when format="gmap_annotation" input="result['format']" value="map_genes"/>
        <when format="gmap_annotation" input="result['format']" value="map_exons"/>
      </change_format>
    </data>
  </outputs>
  <tests>
  </tests> 

  <help>

**What it does**

GMAP_ (Genomic Mapping and Alignment Program)  The functionality provided by gmap allows a user to: (1) map and align a single cDNA interactively against a large genome in about a second, without the startup time of several minutes typically needed by existing mapping programs; (2) switch arbitrarily among different genomes, without the need for a preloaded server dedicated to each genome; (3) run the program on computers with as little as 128 MB of RAM (random access memory); (4) perform high-throughput batch processing of cDNAs by using memory mapping and multithreading when appropriate memory and hardware are available; (5) generate accurate gene models, even in the presence of substantial polymorphisms and sequence errors; (6) locate splice sites accurately without the use of probabilistic splice site models, allowing generalized use of the program across species; (7) detect statistically significant microexons and incorporate them into the alignment; and (8) handle mapping and alignment tasks on genomes having alternate assemblies, linkage groups or strains.  It is developed by Thomas D. Wu of Genentech, Inc.  

Publication_ citation: Thomas D. Wu, Colin K. Watanabe  Bioinformatics 2005 21(9):1859-1875; doi:10.1093/bioinformatics/bti310

.. _GMAP: http://research-pub.gene.com/gmap/
.. _Publication: http://bioinformatics.oxfordjournals.org/cgi/content/full/21/9/1859

------

**Know what you are doing**

.. class:: warningmark

You will want to read the README_

.. _README: http://research-pub.gene.com/gmap/src/README

  </help>
</tool>
