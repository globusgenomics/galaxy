<tool id="metasv" name="metasv" version="METASV: v0.5">
  <description>An accurate and integrative structural-variant caller for next generation sequencing</description>
  <requirements>
    <requirement type="package">pymodules</requirement>
    <requirement type="package" version="3.6.2">spades</requirement>
    <requirement type="package" version="02-22-2016">age</requirement>
  </requirements>
  <command interpreter="python">run_metasv.py
#for $i, $j in enumerate($sv):
    $j.tool $j.input
#end for 
#if $in_type.input_type == "built-in":
  --reference $in_type.genome.fields.path
#else:
  --reference $in_type.input1
#end if
--outdir $metasv_output.extra_files_path 
--sample sample 
--disable_assembly
--filter_gaps
--keep_standard_contigs;
gunzip $metasv_output.extra_files_path/variants.vcf.gz; cp $metasv_output.extra_files_path/variants.vcf $metasv_output; rm -rf $metasv_output.extra_files_path
  </command>

  <stdio>
    <exit_code range="1:" level="fatal" description="Error" />
  </stdio>

  <inputs>
    <conditional name="in_type">
      <param name="input_type" type="select" label="Use a built-in FASTA file or one from the history?">
        <option value="built-in">Built-in</option>
        <option value="history">History file</option>
      </param>
      <when value="built-in">
        <param name="genome" type="select" label="Select a built-in genome" help="if your genome of interest is not listed - contact Galaxy team">
          <options from_data_table="all_fasta_metasv" />
        </param>
      </when>
      <when value="history">
        <param name="input1" type="data" format="fasta" label="Input genome (FASTA format)" />
      </when>
    </conditional>

    <repeat name="sv" title="sv calling tools and inputs" min="1">
      <param help="" label="tool" name="tool" type="select">
        <options from_data_table='sv_tool' />
      </param>
      <param help="" label="input" name="input" type="data"/>  
    </repeat>
   </inputs>

   <outputs>
         <data format="vcf" label="${tool.name} on ${on_string} (call sv)" name="metasv_output" />
   </outputs>
   <tests>
     <test>
     </test>
   </tests>
   <help>

   </help>
</tool>
