# !/usr/bin/env python

import sys
#sys.path.insert(0, "/Users/crisl-adm/Tools/galaxy/galaxy/tools/eupath/Tools/lib/python")
sys.path.insert(0, "/opt/galaxy/tools/eupath/Tools/lib/python")
from eupath import GeneListEupathExporter
from eupath import EupathExporter
import optparse
import sys
import re


def main():
    """
      The following program is a Galaxy Tool for exporting gene list data from Galaxy to EuPathDB via iRODS.

      Sample for testing outside of Galaxy (assuming the existing file structure):
      python exportGeneListToEuPathDB
             "a name" "a summary" "a description" "<user.wdk_id@eupath.org>" "<the galaxy tool xml directory>"
             "<path to genelist.txt file>"

       For example:  on my localhost, I was able to run this successfully:
       python exportGeneListToEuPathDB "A name" "A summary" "A description" "crisl.108976930@eupathdb.org"
        "../lib/xml" "/Users/crisl-adm/Desktop/test-data/genelist.txt" "PlasmoDB-29_PfalciparumIT_Genome" "gg"

    """

    parser = optparse.OptionParser()
    (options, args) = parser.parse_args()

    # So users are greeted with a bewildering traceback
    sys.tracebacklimit = 0

    # Create and populate the meta.json file that must be included in the tarball
    exporter = GeneListEupathExporter.GeneListExport(args)
    try:
        exporter.export()
    except EupathExporter.ValidationException as ve:
        print >> sys.stderr, str(ve)
        sys.exit(1)


if __name__ == "__main__":
    sys.exit(main())