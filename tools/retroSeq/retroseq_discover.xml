<tool id="retroseq_discover" name="RetroSeq Discover" version="RETROSEQ: default; BEDTOOLS: 2.17.0">
 <description>identify discordant read pairs that might support a TE insertion</description>
 <requirements>
   <requirement type="package">retroSeq</requirement>
   <requirement type="package">bedtools</requirement>&gt;
 </requirements>
 <command interpreter="python">
retroseq_wrapper.py --discover 
--bam $bam_input
--output-bed $output
$align
#if $refTEs:
  --refTEs $refTEs
  --refTEsName $refTEsName
#end if
#if $eref:
  --eref $eref
#end if
#if $quality != '':
  -q $quality
#end if
#if $id != '':
  --id $id
#end if
#if $length != '':
  --len $length
#end if
#if $rgs != '':
  --rgs &quot;$rgs&quot;
#end if
#if $exd != '':
  --exd &quot;$exd&quot;
#end if
--extra-files-path $output.extra_files_path
 </command>
 <inputs>
    <param format="bam" label="BAM file of paired reads mapped to reference genome" name="bam_input" type="data"/>
    <param help="For example, Alu, AluY, LINE" label="Name of TE type of reference elements. These will be filtered out from the calling." name="refTEsName" size="30" type="text" value="Alu"/>
    <param format="tabular" label="Tab file with TE type and BED file of reference elements" name="refTEs" optional="true" type="data"/>
    <param format="tabular" label="Tab file with list of transposon types and the corresponding fasta file of reference sequences" name="eref" optional="true" type="data"/>
    <param checked="false" falsevalue="" label="Do the computational expensive exonerate PE discordant mate alignment step" name="align" truevalue="--align" type="boolean"/>
    <param label="Minimum mapping quality for a read mate that anchors the insertion call" name="quality" size="8" type="integer" value="30"/>
    <param label="Minimum percent ID for a match of a read to the transposon references" name="id" size="8" type="integer" value="90"/>
    <param label="Minimum length of a hit to the transposon references" name="length" size="8" type="integer" value="36"/>
    <param help="Default is all" label="Comma separated list of readgroups to operate on." name="rgs" size="30" type="text" value=""/>
    <param help="e.g. simple repeats, centromeres, telomeres" label="Fofn of BED files of regions where discordant mates falling into will be excluded" name="exd" size="30" type="text" value=""/>
 </inputs>
 <outputs>
    <data format="vcf" label="${tool.name} on ${on_string}: TE discover" name="output"/>
 </outputs>
 <help>

**What it does**

The goal here is to pass through the BAM and identify discordant read pairs that might support a TE insertion. You can either supply a tab delimited file specifying a set of TE types (e.g. Alu, LINE etc.) and the corresponding BED file of locations where these are in the reference genome (-refTEs parameter). Alternatively, you can provide a tab delimited file specifying a set of viral/TE types and the corresponding fasta file with a set of consensus sequences for these (-eref parameter).

The discovery stage will produce an output file (specified by the -output parameter) with lists of read pair names per TE type. Multiple discovery stage outputs can be inputted to the calling phase (i.e. to allow parallelisation of the discovery phase).
 </help>

</tool>