<tool description="Parallel submission of Atlas jobs exposing the full parameter set" id="swift_atlas_wrapper_v2" name="Atlas Swift submission (full parameter set)" version="SAMTOOLS: 1.2">
  <description>Run Atlas jobs with Swift</description>
 <requirements>
    <requirement type="package">swift</requirement>
  	<requirement type="package">samtools</requirement>
    <requirement type="package">ruby</requirement>
  </requirements>

  <command interpreter="python">
      swift_atlas_wrapper_v2.py

      ### fasta input
      --fasta $fasta_file

      ### bam file directory
      --bam-dir $bamdir

      ### output directory to be written
      ##--output-dir $outputdir
      --output-dir $output_config.extra_files_path

      ### platform on which reads were generated
      --platform $platform
      
      ### OPTIONAL INPUTS
      ### target region file
      #if str( $target_limit_type ) == 'limit_by_target_file':
        --target-region $input_target_bed
      #end if

      ### posterior probability cutoff
      #if str( $post_cutoff ) != &quot;None&quot;:
        --post-cutoff $post_cutoff
      #end if

      ### Minimum site coverage
      #if str( $min_coverage ) != &quot;None&quot;:
        --min-coverage $min_coverage
      #end if

      ### Prior on error given normal coverage
      #if str( $prior_prob_e ) != &quot;None&quot;:
        --prior-e $prior_prob_e
      #end if

      ### Prior of error given low coverage
      #if str( $prior_prob_l ) != &quot;None&quot; and len(str( $prior_prob_l )) != 0:
        --prior-l $prior_prob_l
      #end if

      ### max percent substitutions allowed per base 
      #if str( $base_sub_max ) != &quot;None&quot;:
        --base-sub-filter $base_sub_max
      #end if

      ### max percent indels allowed per base
      #if str( $base_indel_max ) != &quot;None&quot;:
        --base-indel-filter $base_indel_max
      #end if

      ### maximum alignments allowed
      #if str( $alignment_max ) != &quot;None&quot;:
        --max-alignments $alignment_max
      #end if

      ### max insertion size allowed
      #if str( $insert_size_max ) != &quot;None&quot;:
        --insert-size-filter $insert_size_max
      #end if

      ### flag to evaluate on at sites in sites file
      #if $evalSites.eval_sites_flag == &quot;Yes&quot;:
        #if str( $evalSites.only_eval_sites ) == &quot;Yes&quot;:
          --only-eval-sites
        #end if
        ### sites to call file
        --sites-list $evalSites.sites_list
      #end if

      ### flag to filter at quali less than 1
      #if $qual_filter == &quot;Yes&quot;:
          --qual-filter
      #end if
      
      ### outputs
      --dummy $output_config
      --log $output_log

  </command>
  <inputs>
    <param format="fasta" help="" label="Fasta Reference" name="fasta_file" type="data"/>
    <param help="" label="BAM Directory Path" name="bamdir" type="text"/>
    <!--<param name="outputdir" type="text" label="Output Directory Path" help=""/>-->

    <param help="" label="Choosing Platform:" name="platform" type="select">
      <option selected="true" value="Illumina">Illumina</option>
      <option value="454_FLX">454 FLX</option>
      <option value="454_XLR">454 Titanium</option>
    </param>

    <conditional name="target_limit_type">
      <param label="Limit analysis to listed targets" name="target_limit_type_selector" type="select">
        <option selected="True" value="do_not_limit">Do not limit</option>
        <option value="limit_by_target_file">Limit by target file</option>
      </param>
      <when value="do_not_limit">
        <!-- Do nothing here -->
      </when>
      <when value="limit_by_target_file">
            <param format="bed" label="Limit analysis to targets listed in the BED-format FILE." name="input_target_bed" type="data"/>
      </when>
    </conditional>

    <param help="" label="Filter variants with QUAL less than 1?" name="qual_filter" type="select">
      <option value="Yes"> Yes </option>
      <option value="No"> No </option>
    </param>
    
    <param help="" label="Posterior probability cutoff" name="post_cutoff" type="text" value="None"/>
    <param help="" label="Minimum coverage for a site to be called." name="min_coverage" type="text" value="None"/>
    <param help="" label="Prior for error with normal coverage 454 and Illumina data." name="prior_prob_e" type="text" value="None"/>
    <param help="" label="Prior for error with low coverage 454 data." name="prior_prob_l" type="text" value="None"/>
    <param help="" label="Maximum percentage of substitution bases allowed in the alignment." name="base_sub_max" type="text" value="None"/>
    <param help="" label="Maximum percentage ofinsertion and deletion bases allowed in the alignmen" name="base_indel_max" type="text" value="None"/>
    <param help="" label="Insertion size for pair-end re-sequencing data" name="insert_size_max" type="text" value="None"/>
    <param help="" label="Maximum number of alignments allowed to be piled up on a site." name="alignment_max" type="text" value="None"/>

    <conditional name="evalSites">
      <param help="" label="Restrict evaluation to sites in Sites List file." name="eval_sites_flag" type="select">
        <option value="Yes">Yes</option>
        <option value="No">No</option>
      </param>
      <when value="Yes">
        <param help="" label="Evaluate only sites in the list" name="only_eval_sites" type="select">
          <option value="Yes">Yes</option>
          <option value="No">No</option>
        </param>
        <param format="tabular" help="" label="File containing sites that will always appear in output VCF." name="sites_list" type="data"/>
      </when>
      <when value="No"/>
    </conditional>

  </inputs>

  <outputs> 
    <data format="tabular" name="output_config"/>
    <data format="pdf" name="output_log"/>
  </outputs>
  <help>

**What it does**

**Outputs**

  </help>
</tool>
