<tool id="gatk3.8_variant_recalibrator" name="Variant Recalibrator" version="GATK3.8: GenomeAnalysisTK-3.8-0; SAMTOOLS: 1.1">
  <description/>
  <requirements>
      <requirement type="package" version="1.8.0">java</requirement>
      <requirement type="package" version="3.8">gatk3</requirement>
      <requirement type="package" version="1.1">samtools</requirement>
  </requirements>
  <macros>
    <import>gatk_macros.xml</import>
  </macros>
  <command interpreter="python">gatk3_wrapper.py
   --max_jvm_heap_fraction &quot;1&quot;
   #for $var_count, $variant in enumerate( $reference_source.variants ):
      -d &quot;--input:input_${var_count},%(file_type)s&quot; &quot;${variant.input_variants}&quot; &quot;${variant.input_variants.ext}&quot; &quot;input_variants_${var_count}&quot;
   #end for
   -p 'java 
    -jar &quot;\$GATK3_PATH/GenomeAnalysisTK.jar&quot;
    -T &quot;VariantRecalibrator&quot;
    \$GATK3_SITE_OPTIONS
    \$GATK3_NUM_THREADS
    --num_threads 32 ##hard coded, for now
    ##-et &quot;NO_ET&quot; -K &quot;\$GATK3_BASE/gatk3_key_file&quot;##ET no phone home
    #if $reference_source.reference_source_selector != &quot;history&quot;:
        -R &quot;${reference_source.ref_file.fields.path}&quot;
    #end if
    --recal_file &quot;${output_recal}&quot;
    --tranches_file &quot;${output_tranches}&quot;
    --rscript_file &quot;${output_rscript}&quot;
   '
    
    #set $rod_binding_names = dict()
    #for $rod_binding in $rod_bind:
        #if str( $rod_binding.rod_bind_type.rod_bind_type_selector ) == 'custom':
            #set $rod_bind_name = $rod_binding.rod_bind_type.custom_rod_name
        #elif str( $rod_binding.rod_bind_type.rod_bind_type_selector ) == 'comp':
            #set $rod_bind_name = &quot;comp&quot; + $rod_binding.rod_bind_type.custom_rod_name
        #else 
            #set $rod_bind_name = $rod_binding.rod_bind_type.rod_bind_type_selector
        #end if
        #set $rod_binding_names[$rod_bind_name] = $rod_binding_names.get( $rod_bind_name, -1 ) + 1
        #if $rod_binding.rod_bind_type.rod_training_type.rod_training_type_selector == &quot;not_training_truth_known&quot;:
            -d &quot;--resource:${rod_bind_name},%(file_type)s&quot; &quot;${rod_binding.rod_bind_type.input_rod}&quot; &quot;${rod_binding.rod_bind_type.input_rod.ext}&quot; &quot;input_${rod_bind_name}_${rod_binding_names[$rod_bind_name]}&quot;
        #else:
            -d &quot;--resource:${rod_bind_name},%(file_type)s,known=${rod_binding.rod_bind_type.rod_training_type.known},training=${rod_binding.rod_bind_type.rod_training_type.training},truth=${rod_binding.rod_bind_type.rod_training_type.truth},bad=${rod_binding.rod_bind_type.rod_training_type.bad},prior=${rod_binding.rod_bind_type.rod_training_type.prior}&quot; &quot;${rod_binding.rod_bind_type.input_rod}&quot; &quot;${rod_binding.rod_bind_type.input_rod.ext}&quot; &quot;input_${rod_bind_name}_${rod_binding_names[$rod_bind_name]}&quot;
        #end if
    #end for
    
    ##start standard gatk options
    #if $gatk_param_type.gatk_param_type_selector == &quot;advanced&quot;:
        #include source=$standard_gatk_options#
    #end if
    
    #if str( $reference_source.reference_source_selector ) == &quot;history&quot;:
        -d &quot;-R&quot; &quot;${reference_source.ref_file}&quot; &quot;${reference_source.ref_file.ext}&quot; &quot;gatk_input_reference_fasta&quot;
        --picard_jar &quot;/mnt/galaxyTools/tools/picard/1.121/CreateSequenceDictionary.jar&quot;
    #end if
    ##end standard gatk options
    
    ##start analysis specific options
    -p '
    #if str( $annotations ) != &quot;None&quot;:
        #for $annotation in str( $annotations.fields.gatk_value ).split( ',' ):
            --use_annotation &quot;${annotation}&quot;
        #end for
    #end if
    #for $additional_annotation in $additional_annotations:
        --use_annotation &quot;${additional_annotation.additional_annotation_name}&quot;
    #end for
    --mode &quot;${mode}&quot;
    '
    
    #if $analysis_param_type.analysis_param_type_selector == &quot;advanced&quot;:
        -p '
        --maxGaussians &quot;${analysis_param_type.max_gaussians}&quot;
        --maxIterations &quot;${analysis_param_type.max_iterations}&quot;
        --numKMeans &quot;${analysis_param_type.num_k_means}&quot;
        --stdThreshold &quot;${analysis_param_type.std_threshold}&quot;
        ##--qual &quot;${analysis_param_type.qual_threshold}&quot;
        --shrinkage &quot;${analysis_param_type.shrinkage}&quot;
        --dirichlet &quot;${analysis_param_type.dirichlet}&quot;
        --priorCounts &quot;${analysis_param_type.prior_counts}&quot;
        --minNumBadVariants &quot;${analysis_param_type.min_num_bad_variants}&quot;
        --target_titv &quot;${analysis_param_type.target_titv}&quot;
        #for $tranche in [ $tranche.strip() for $tranche in str( $analysis_param_type.ts_tranche ).split( ',' ) if $tranche.strip() ]
            --TStranche &quot;${tranche}&quot;
        #end for
        #for $ignore_filter in $analysis_param_type.ignore_filters:
            #set $ignore_filter_name = str( $ignore_filter.ignore_filter_type.ignore_filter_type_selector )
            #if $ignore_filter_name == &quot;custom&quot;:
              #set $ignore_filter_name = str( $ignore_filter.ignore_filter_type.filter_name )
            #end if
            --ignore_filter &quot;${ignore_filter_name}&quot;
        #end for
        '
    #end if
    
    
    &amp;&amp;
    mv &quot;${output_tranches}.pdf&quot; &quot;${output_tranches_pdf}&quot;
    
  </command>
  <inputs>
    <conditional name="reference_source">
      <param label="Choose the source for the reference list" name="reference_source_selector" type="select">
        <option value="cached">Locally cached</option>
        <option value="history">History</option>
      </param>
      <when value="cached">
        <repeat help="-input,--input &amp;lt;input&amp;gt;" min="1" name="variants" title="Variant">
          <param format="vcf" label="Variant file to recalibrate" name="input_variants" type="data"/>
        </repeat>
        <param help="-R,--reference_sequence &amp;lt;reference_sequence&amp;gt;" label="Using reference genome" name="ref_file" type="select">
          <options from_data_table="gatk_picard_indexes">
                <filter column="3" type="sort_by"/>

          <!--  <filter type="data_meta" key="dbkey" ref="variants[0].input_variants" column="dbkey"/> -->
          </options>
          <validator message="A built-in reference genome is not available for the build associated with the selected input file" type="no_options"/>
        </param>
      </when>
      <when value="history"> <!-- FIX ME!!!! -->
        <repeat help="-input,--input &amp;lt;input&amp;gt;" min="1" name="variants" title="Variant">
          <param format="vcf" label="Variant file to recalibrate" name="input_variants" type="data"/>
        </repeat>
        <param format="fasta" help="-R,--reference_sequence &amp;lt;reference_sequence&amp;gt;" label="Using reference file" name="ref_file" type="data"/>
      </when>
    </conditional>
    
    <repeat help="-resource,--resource &amp;lt;resource&amp;gt;" name="rod_bind" title="Binding for reference-ordered data">
        <conditional name="rod_bind_type">
          <param label="Binding Type" name="rod_bind_type_selector" type="select">
            <option selected="True" value="dbsnp">dbSNP</option>
            <option value="variant">Variants</option>
            <option value="snps">SNPs</option>
            <option value="indels">INDELs</option>
            <option value="hapmap">HapMap</option>
            <option value="omni">OMNI</option>
            <option value="mask">Mask</option>
            <option value="custom">Custom</option>
            <option value="comp">Comp</option>
          </param>
          <when value="variant">
              <param format="vcf" label="Variant ROD file" name="input_rod" type="data"/>
              <conditional name="rod_training_type">
                  <param label="Use as training/truth/known sites" name="rod_training_type_selector" type="select">
                      <option value="is_training_truth_known">Set training/truth/known sites</option>
                      <option selected="True" value="not_training_truth_known">Don't Set options</option>
                  </param>
                  <when value="not_training_truth_known">
                      <!-- do nothing here -->
                  </when>
                  <when value="is_training_truth_known">
                      <param falsevalue="false" label="Is Known Site" name="known" truevalue="true" type="boolean"/>
                      <param falsevalue="false" label="Is Training Site" name="training" truevalue="true" type="boolean"/>
                      <param falsevalue="false" label="Is Truth Site" name="truth" truevalue="true" type="boolean"/>
                      <param falsevalue="false" label="Is Bad Site" name="bad" truevalue="true" type="boolean"/>
                      <param label="prior probability of being true" name="prior" type="float" value="12.0"/>
                  </when>
              </conditional>
          </when>
          <when value="comp">
              <param format="vcf" label="ROD file" name="input_rod" type="data"/>
              <param label="ROD Name" name="custom_rod_name" type="text" value="Unnamed"/>
              <conditional name="rod_training_type">
                  <param label="Use as training/truth/known sites" name="rod_training_type_selector" type="select">
                      <option value="is_training_truth_known">Set training/truth/known sites</option>
                      <option selected="True" value="not_training_truth_known">Don't Set options</option>
                  </param>
                  <when value="not_training_truth_known">
                      <!-- do nothing here -->
                  </when>
                  <when value="is_training_truth_known">
                      <param falsevalue="false" label="Is Known Site" name="known" truevalue="true" type="boolean"/>
                      <param falsevalue="false" label="Is Training Site" name="training" truevalue="true" type="boolean"/>
                      <param falsevalue="false" label="Is Truth Site" name="truth" truevalue="true" type="boolean"/>
                      <param falsevalue="false" label="Is Bad Site" name="bad" truevalue="true" type="boolean"/>
                      <param label="prior probability of being true" name="prior" type="float" value="12.0"/>
                  </when>
              </conditional>
          </when>
          <when value="mask">
              <param format="vcf" label="ROD file" name="input_rod" type="data"/>
              <conditional name="rod_training_type">
                  <param label="Use as training/truth/known sites" name="rod_training_type_selector" type="select">
                      <option value="is_training_truth_known">Set training/truth/known sites</option>
                      <option selected="True" value="not_training_truth_known">Don't Set options</option>
                  </param>
                  <when value="not_training_truth_known">
                      <!-- do nothing here -->
                  </when>
                  <when value="is_training_truth_known">
                      <param falsevalue="false" label="Is Known Site" name="known" truevalue="true" type="boolean"/>
                      <param falsevalue="false" label="Is Training Site" name="training" truevalue="true" type="boolean"/>
                      <param falsevalue="false" label="Is Truth Site" name="truth" truevalue="true" type="boolean"/>
                      <param falsevalue="false" label="Is Bad Site" name="bad" truevalue="true" type="boolean"/>
                      <param label="prior probability of being true" name="prior" type="float" value="12.0"/>
                  </when>
              </conditional>
          </when>          
          <when value="dbsnp">
              <param format="vcf" label="ROD file" name="input_rod" type="data"/>
              <conditional name="rod_training_type">
                  <param label="Use as training/truth/known sites" name="rod_training_type_selector" type="select">
                      <option value="is_training_truth_known">Set training/truth/known sites</option>
                      <option selected="True" value="not_training_truth_known">Don't Set options</option>
                  </param>
                  <when value="not_training_truth_known">
                      <!-- do nothing here -->
                  </when>
                  <when value="is_training_truth_known">
                      <param falsevalue="false" label="Is Known Site" name="known" truevalue="true" type="boolean"/>
                      <param falsevalue="false" label="Is Training Site" name="training" truevalue="true" type="boolean"/>
                      <param falsevalue="false" label="Is Truth Site" name="truth" truevalue="true" type="boolean"/>
                      <param falsevalue="false" label="Is Bad Site" name="bad" truevalue="true" type="boolean"/>
                      <param label="prior probability of being true" name="prior" type="float" value="12.0"/>
                  </when>
              </conditional>
          </when>
          <when value="snps">
              <param format="vcf" label="ROD file" name="input_rod" type="data"/>
              <conditional name="rod_training_type">
                  <param label="Use as training/truth/known sites" name="rod_training_type_selector" type="select">
                      <option value="is_training_truth_known">Set training/truth/known sites</option>
                      <option selected="True" value="not_training_truth_known">Don't Set options</option>
                  </param>
                  <when value="not_training_truth_known">
                      <!-- do nothing here -->
                  </when>
                  <when value="is_training_truth_known">
                      <param falsevalue="false" label="Is Known Site" name="known" truevalue="true" type="boolean"/>
                      <param falsevalue="false" label="Is Training Site" name="training" truevalue="true" type="boolean"/>
                      <param falsevalue="false" label="Is Truth Site" name="truth" truevalue="true" type="boolean"/>
                      <param falsevalue="false" label="Is Bad Site" name="bad" truevalue="true" type="boolean"/>
                      <param label="prior probability of being true" name="prior" type="float" value="12.0"/>
                  </when>
              </conditional>
          </when>
          <when value="hapmap">
              <param format="vcf" label="ROD file" name="input_rod" type="data"/>
              <conditional name="rod_training_type">
                  <param label="Use as training/truth/known sites" name="rod_training_type_selector" type="select">
                      <option value="is_training_truth_known">Set training/truth/known sites</option>
                      <option selected="True" value="not_training_truth_known">Don't Set options</option>
                  </param>
                  <when value="not_training_truth_known">
                      <!-- do nothing here -->
                  </when>
                  <when value="is_training_truth_known">
                      <param falsevalue="false" label="Is Known Site" name="known" truevalue="true" type="boolean"/>
                      <param falsevalue="false" label="Is Training Site" name="training" truevalue="true" type="boolean"/>
                      <param falsevalue="false" label="Is Truth Site" name="truth" truevalue="true" type="boolean"/>
                      <param falsevalue="false" label="Is Bad Site" name="bad" truevalue="true" type="boolean"/>
                      <param label="prior probability of being true" name="prior" type="float" value="12.0"/>
                  </when>
              </conditional>
          </when>
          <when value="omni">
              <param format="vcf" label="ROD file" name="input_rod" type="data"/>
              <conditional name="rod_training_type">
                  <param label="Use as training/truth/known sites" name="rod_training_type_selector" type="select">
                      <option value="is_training_truth_known">Set training/truth/known sites</option>
                      <option selected="True" value="not_training_truth_known">Don't Set options</option>
                  </param>
                  <when value="not_training_truth_known">
                      <!-- do nothing here -->
                  </when>
                  <when value="is_training_truth_known">
                      <param falsevalue="false" label="Is Known Site" name="known" truevalue="true" type="boolean"/>
                      <param falsevalue="false" label="Is Training Site" name="training" truevalue="true" type="boolean"/>
                      <param falsevalue="false" label="Is Truth Site" name="truth" truevalue="true" type="boolean"/>
                      <param falsevalue="false" label="Is Bad Site" name="bad" truevalue="true" type="boolean"/>
                      <param label="prior probability of being true" name="prior" type="float" value="12.0"/>
                  </when>
              </conditional>
          </when>
          <when value="indels">
              <param format="vcf" label="ROD file" name="input_rod" type="data"/>
              <conditional name="rod_training_type">
                  <param label="Use as training/truth/known sites" name="rod_training_type_selector" type="select">
                      <option value="is_training_truth_known">Set training/truth/known sites</option>
                      <option selected="True" value="not_training_truth_known">Don't Set options</option>
                  </param>
                  <when value="not_training_truth_known">
                      <!-- do nothing here -->
                  </when>
                  <when value="is_training_truth_known">
                      <param falsevalue="false" label="Is Known Site" name="known" truevalue="true" type="boolean"/>
                      <param falsevalue="false" label="Is Training Site" name="training" truevalue="true" type="boolean"/>
                      <param falsevalue="false" label="Is Truth Site" name="truth" truevalue="true" type="boolean"/>
                      <param falsevalue="false" label="Is Bad Site" name="bad" truevalue="true" type="boolean"/>
                      <param label="prior probability of being true" name="prior" type="float" value="12.0"/>
                  </when>
              </conditional>
          </when>
          <when value="custom">
              <param label="ROD Name" name="custom_rod_name" type="text" value="Unknown"/>
              <param format="vcf" label="ROD file" name="input_rod" type="data"/>
              <conditional name="rod_training_type">
                  <param label="Use as training/truth/known sites" name="rod_training_type_selector" type="select">
                      <option value="is_training_truth_known">Set training/truth/known sites</option>
                      <option selected="True" value="not_training_truth_known">Don't Set options</option>
                  </param>
                  <when value="not_training_truth_known">
                      <!-- do nothing here -->
                  </when>
                  <when value="is_training_truth_known">
                      <param falsevalue="false" label="Is Known Site" name="known" truevalue="true" type="boolean"/>
                      <param falsevalue="false" label="Is Training Site" name="training" truevalue="true" type="boolean"/>
                      <param falsevalue="false" label="Is Truth Site" name="truth" truevalue="true" type="boolean"/>
                      <param falsevalue="false" label="Is Bad Site" name="bad" truevalue="true" type="boolean"/>
                      <param label="prior probability of being true" name="prior" type="float" value="12.0"/>
                  </when>
              </conditional>
          </when>
        </conditional>
    </repeat>
    
    <param display="checkboxes" help="-an,--use_annotation &amp;lt;use_annotation&amp;gt;" label="annotations which should used for calculations" multiple="True" name="annotations" type="select">
      <!-- load the available annotations from an external configuration file, since additional ones can be added to local installs -->
      <options from_data_table="gatk3_annotations">
        <filter column="tools_valid_for" separator="," type="multiple_splitter"/>
        <filter column="tools_valid_for" type="static_value" value="VariantRecalibrator"/>
      </options>
    </param>
    
    <repeat help="-an,--use_annotation &amp;lt;use_annotation&amp;gt;" name="additional_annotations" title="Additional annotation">
      <param label="Annotation name" name="additional_annotation_name" type="text" value=""/>
    </repeat>
    
    <param help="-mode,--mode &amp;lt;mode&amp;gt;" label="Recalibration mode" name="mode" type="select">
        <option selected="True" value="SNP">SNP</option>
        <option value="INDEL">INDEL</option>
        <option value="BOTH">BOTH</option>
    </param>
    
    <conditional name="gatk_param_type">
      <param label="Basic or Advanced GATK options" name="gatk_param_type_selector" type="select">
        <option selected="True" value="basic">Basic</option>
        <option value="advanced">Advanced</option>
      </param>
      <when value="basic">
        <!-- Do nothing here -->
      </when>
      <when value="advanced">
        <expand macro="advanced_options" />
      </when>
    </conditional>
    
    <conditional name="analysis_param_type">
      <param label="Basic or Advanced Analysis options" name="analysis_param_type_selector" type="select">
        <option selected="True" value="basic">Basic</option>
        <option value="advanced">Advanced</option>
      </param>
      <when value="basic">
        <!-- Do nothing here -->
      </when>
      <when value="advanced">
        <param help="-mG,--maxGaussians &amp;lt;maxGaussians&amp;gt;" label="maximum number of Gaussians to try during variational Bayes Algorithm" name="max_gaussians" type="integer" value="10"/>
        <param help="-mI,--maxIterations &amp;lt;maxIterations&amp;gt;" label="maximum number of maximum number of VBEM iterations to be performed in variational Bayes Algorithm" name="max_iterations" type="integer" value="100"/>
        <param help="-nKM,--numKMeans &amp;lt;numKMeans&amp;gt;" label="number of k-means iterations to perform in order to initialize the means of the Gaussians in the Gaussian mixture model" name="num_k_means" type="integer" value="30"/>
        <param help="-std,--stdThreshold &amp;lt;stdThreshold&amp;gt;" label="If a variant has annotations more than -std standard deviations away from mean then don't use it for building the Gaussian mixture model." name="std_threshold" type="float" value="8.0"/>
        <!--<param name="qual_threshold" type="float" label="If a known variant has raw QUAL value less than -qual then don't use it for building the Gaussian mixture model." value="80.0" help="-qual,-qualThreshold &amp;lt;qualThreshold&amp;gt;"/>-->
        <param help="-shrinkage,--shrinkage &amp;lt;shrinkage&amp;gt;" label="shrinkage parameter in variational Bayes algorithm" name="shrinkage" type="float" value="1.0"/>
        <param help="-dirichlet,--dirichlet &amp;lt;dirichlet&amp;gt;" label="dirichlet parameter in variational Bayes algorithm" name="dirichlet" type="float" value="0.001"/>
        <param help="-priorCounts,--priorCounts &amp;lt;priorCounts&amp;gt;" label="number of prior counts to use in variational Bayes algorithm" name="prior_counts" type="float" value="20.0"/>
        <param help="-minNumBad,--minNumBadVariants &amp;lt;minNumBadVariants&amp;gt;" label="minimum amount of worst scoring variants to use when building the Gaussian mixture model of bad variants." name="min_num_bad_variants" type="integer" value="1000"/>
        <param help="-titv,--target_titv &amp;lt;target_titv&amp;gt;" label="expected novel Ti/Tv ratio to use when calculating FDR tranches and for display on optimization curve output figures. (approx 2.15 for whole genome experiments). ONLY USED FOR PLOTTING PURPOSES!" name="target_titv" type="float" value="2.15"/>
        <param help="-tranche,--TStranche &amp;lt;TStranche&amp;gt;" label="levels of novel false discovery rate (FDR, implied by ti/tv) at which to slice the data. (in percent, that is 1.0 for 1 percent)" name="ts_tranche" type="text" value="100.0, 99.9, 99.0, 90.0"/>
        <repeat help="-ignoreFilter,--ignore_filter &amp;lt;ignore_filter&amp;gt;" name="ignore_filters" title="Ignore Filter">
          <conditional name="ignore_filter_type">
            <param label="Filter Type" name="ignore_filter_type_selector" type="select">
              <option value="HARD_TO_VALIDATE">HARD_TO_VALIDATE</option>
              <option value="LowQual">LowQual</option>
              <option selected="True" value="custom">Other</option>
            </param>
            <when value="custom">
              <param label="Filter name" name="filter_name" type="text" value=""/>
            </when>
            <when value="HARD_TO_VALIDATE"/>
            <when value="LowQual"/>
          </conditional>
        </repeat>
      </when>
    </conditional>
  </inputs>
  <outputs>
    <data format="gatk_recal" label="${tool.name} on ${on_string} (Recalibration File)" name="output_recal"/>
    <data format="gatk_tranche" label="${tool.name} on ${on_string} (Tranches File)" name="output_tranches"/>
    <data format="txt" label="${tool.name} on ${on_string} (RScript File)" name="output_rscript"/>
    <data format="pdf" label="${tool.name} on ${on_string} (PDF File)" name="output_tranches_pdf"/>
  </outputs>
  <tests>
      <!-- ADD TESTS -->
  </tests>
  <help>
**What it does**

Takes variant calls as .vcf files, learns a Gaussian mixture model over the variant annotations and evaluates the variant -- assigning an informative lod score

For more information on using the VariantRecalibrator module, see this `tool specific page &lt;http://www.broadinstitute.org/gatk/gatkdocs/org_broadinstitute_sting_gatk_walkers_variantrecalibration_VariantRecalibrator.html&gt;`_.

To learn about best practices for variant detection using GATK, see this `overview &lt;http://www.broadinstitute.org/gatk/guide/topic?name=best-practices&gt;`_.

If you encounter errors, please view the `GATK FAQ &lt;http://www.broadinstitute.org/gatk/guide/topic?name=faqs&gt;`_.

------

**Inputs**

GenomeAnalysisTK: VariantRecalibrator accepts a variant input file.


**Outputs**

The output is in VCF format.


Go `here &lt;http://www.broadinstitute.org/gatk/guide/topic?name=intro&gt;`_ for details on GATK file formats.

-------

**Settings**::


 tranches_file         The output tranches file used by ApplyRecalibration
 use_annotation        The names of the annotations which should used for calculations
 mode                  Recalibration mode to employ: 1.) SNP for recalibrating only snps (emitting indels untouched in the output VCF); 2.) INDEL for indels; and 3.) BOTH for recalibrating both snps and indels simultaneously. (SNP|INDEL|BOTH)
 maxGaussians          The maximum number of Gaussians to try during variational Bayes algorithm
 maxIterations         The maximum number of VBEM iterations to be performed in variational Bayes algorithm. Procedure will normally end when convergence is detected.
 numKMeans             The number of k-means iterations to perform in order to initialize the means of the Gaussians in the Gaussian mixture model.
 stdThreshold          If a variant has annotations more than -std standard deviations away from mean then don't use it for building the Gaussian mixture model.
 qualThreshold         If a known variant has raw QUAL value less than -qual then don't use it for building the Gaussian mixture model.
 shrinkage             The shrinkage parameter in variational Bayes algorithm.
 dirichlet             The dirichlet parameter in variational Bayes algorithm.
 priorCounts           The number of prior counts to use in variational Bayes algorithm.
 minNumBadVariants     The minimum amount of worst scoring variants to use when building the Gaussian mixture model of bad variants. Will override -percentBad arugment if necessary.
 recal_file            The output recal file used by ApplyRecalibration
 target_titv           The expected novel Ti/Tv ratio to use when calculating FDR tranches and for display on optimization curve output figures. (approx 2.15 for whole genome experiments). ONLY USED FOR PLOTTING PURPOSES!
 TStranche             The levels of novel false discovery rate (FDR, implied by ti/tv) at which to slice the data. (in percent, that is 1.0 for 1 percent)
 ignore_filter         If specified the optimizer will use variants even if the specified filter name is marked in the input VCF file
 path_to_Rscript       The path to your implementation of Rscript. For Broad users this is maybe /broad/tools/apps/R-2.6.0/bin/Rscript
 rscript_file          The output rscript file generated by the VQSR to aid in visualization of the input data and learned model
 path_to_resources     Path to resources folder holding the Sting R scripts.
 ts_filter_level       The truth sensitivity level at which to start filtering, used here to indicate filtered variants in plots

------

**Citation**

For the underlying tool, please cite `DePristo MA, Banks E, Poplin R, Garimella KV, Maguire JR, Hartl C, Philippakis AA, del Angel G, Rivas MA, Hanna M, McKenna A, Fennell TJ, Kernytsky AM, Sivachenko AY, Cibulskis K, Gabriel SB, Altshuler D, Daly MJ. A framework for variation discovery and genotyping using next-generation DNA sequencing data. Nat Genet. 2011 May;43(5):491-8. &lt;http://www.ncbi.nlm.nih.gov/pubmed/21478889&gt;`_

Please also site `McKenna A, Hanna M, Banks E, Sivachenko A, Cibulskis K, Kernytsky A, Garimella K, Altshuler D, Gabriel S, Daly M, DePristo MA (2010). The Genome Analysis Toolkit: a MapReduce framework for analyzing next-generation DNA sequencing data. Genome Res. 20:1297-303. Epub 2010 Jul 19. &lt;http://www.ncbi.nlm.nih.gov/pubmed/20644199&gt;`_

If you use this tool in Galaxy, please cite `Blankenberg D, Von Kuster G, Coraor N, Ananda G, Lazarus R, Mangan M, Nekrutenko A, Taylor J. Galaxy: a web-based genome analysis tool for experimentalists. Curr Protoc Mol Biol. 2010 Jan;Chapter 19:Unit 19.10.1-21. &lt;http://www.ncbi.nlm.nih.gov/pubmed/20069535&gt;`_

  </help>
</tool>
