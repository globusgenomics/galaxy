<tool id="mz_to_sqlite" name="mz to sqlite" version="1.2.0">
    <description>Extract mzIdentML and associated proteomics datasets into a SQLite DB</description>
    <requirements>
      <requirement type="package" >java</requirement>
      <requirement type="package" version="1.2.0">mztosqlite</requirement>
    </requirements>
   <stdio>
       <exit_code range="1:"  level="fatal" description="Error Running mz_to_sqlite" />
   </stdio>
    <command>
<![CDATA[
java -jar \$MZTOSQLITE_JAR_PATH -s $mzsqlite 
#if len($scanfiles) > 0:
$scanfiles.__str__.replace(',',' ') 
#end if
#if len($searchdbs) > 0:
$searchdbs.__str__.replace(',',' ') 
#end if
#if len($mzinputs) > 0:
$mzinputs.__str__.replace(',',' ')
#end if
]]>
    </command>
    <inputs>
        <param name="mzinputs" type="data" format="mzid" multiple="true" optional="true" label="Proteomics Identification files"/>
        <param name="scanfiles" type="data" format="mzml,mgf" multiple="true" optional="true" label="Proteomics Spectrum files"/>
        <param name="searchdbs" type="data" format="fasta,uniprotxml" multiple="true" optional="true" label="Proteomics Search Database Fasta"
               help="These can provide sequences and length for proteins if not already present in the mzIdentML input"/>
    </inputs>
    <outputs>
        <data format="mz.sqlite" name="mzsqlite" label="${tool.name} on ${on_string}"/>
    </outputs>
    <tests>
        <test>
        </test>
    </tests>
    <help>
<![CDATA[
** mz_to_sqlite  converts proteomics file formats to a SQLite database**

]]>
    </help>
</tool>
