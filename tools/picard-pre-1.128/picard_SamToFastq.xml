<tool force_history_refresh="True" id="picard_SamToFastq" name="SAM to FASTQ" version="PICARD: 1.56.0">
  <description>creates a FASTQ file</description>
  <requirements><requirement type="package" version="1.56.0">picard</requirement></requirements>
  <!-- Dan Blankenberg -->
  <command interpreter="python">picard_SamToFastq_wrapper.py
    -p '
    java -XX:DefaultMaxRAMFraction=1 -XX:+UseParallelGC
    -jar &quot;\$JAVA_JAR_PATH/SamToFastq.jar&quot;
    INPUT=&quot;${input_sam}&quot;
    VALIDATION_STRINGENCY=&quot;LENIENT&quot;
    RE_REVERSE=${re_reverse}
    INCLUDE_NON_PF_READS=${include_non_pf_reads}
    #if str( $clipping_attribute ):
        CLIPPING_ATTRIBUTE=&quot;${clipping_attribute}&quot;
    #end if
    #if str( $clipping_action ):
        CLIPPING_ACTION=&quot;${clipping_action}&quot;
    #end if
    #if str( $read1_trim ):
        READ1_TRIM=&quot;${read1_trim}&quot;
    #end if
    #if str( $read1_max_bases_to_write ):
        READ1_MAX_BASES_TO_WRITE=&quot;${read1_max_bases_to_write}&quot;
    #end if
    INCLUDE_NON_PRIMARY_ALIGNMENTS=${include_non_primary_alignments}
    
    #if str( $output_per_read_group_selector ) == 'per_sam_file':
        ##OUTPUT_PER_RG=false
        FASTQ=&quot;${output_fastq1}&quot;
        
        #if str( $single_paired_end_type.single_paired_end_type_selector ) == 'paired':
            SECOND_END_FASTQ=&quot;${output_fastq2}&quot;
            #if str( $single_paired_end_type.read2_trim ): 
                READ2_TRIM=&quot;${single_paired_end_type.read2_trim}&quot;
            #end if
            #if str( $single_paired_end_type.read2_max_bases_to_write ):
                READ2_MAX_BASES_TO_WRITE=&quot;${single_paired_end_type.read2_max_bases_to_write}&quot;
            #end if
        #end if
        '
    #else:
        OUTPUT_PER_RG=true
        #if str( $single_paired_end_type.single_paired_end_type_selector ) == 'paired':
            ' 
            --read_group_file_2 &quot;${output_fastq2}&quot;
            --file_id_2 &quot;${output_fastq2.id}&quot;
            -p '
            #if str( $single_paired_end_type.read2_trim ): 
                READ2_TRIM=&quot;${single_paired_end_type.read2_trim}&quot;
            #end if
            #if str( $single_paired_end_type.read2_max_bases_to_write ):
                READ2_MAX_BASES_TO_WRITE=&quot;${single_paired_end_type.read2_max_bases_to_write}&quot;
            #end if
        #end if
        '
        --read_group_file_1 &quot;${output_fastq1}&quot;
        --new_files_path &quot;${$__new_file_path__}&quot;
        --file_id_1 &quot;${output_fastq1.id}&quot;
    #end if
  </command>
  <inputs>
    <param format="sam,bam" label="BAM/SAM file" name="input_sam" type="data"/>
    <param label="The number of bases to trim from the beginning of read 1." name="read1_trim" optional="True" type="integer" value=""/>
    <param label="The maximum number of bases to write from read 1 after trimming." name="read1_max_bases_to_write" optional="True" type="integer" value=""/>
    <param label="Output per read group" name="output_per_read_group_selector" type="select">
      <option selected="True" value="per_sam_file">Per BAM/SAM file</option>
      <option value="per_read_group">Per Read Group</option>
    </param>
    <conditional name="single_paired_end_type">
      <param label="Single or Paired end" name="single_paired_end_type_selector" type="select">
        <option selected="True" value="single">Single</option>
        <option value="paired">Paired end</option>
      </param>
      <when value="single">
        <!-- nothing yet -->
      </when>
      <when value="paired">
        <param label="The number of bases to trim from the beginning of read 2." name="read2_trim" optional="True" type="integer" value=""/>
        <param label="The maximum number of bases to write from read 2 after trimming." name="read2_max_bases_to_write" optional="True" type="integer" value=""/>
      </when>
    </conditional>
    <param checked="True" falsevalue="false" label="Re-reverse bases and qualities of reads on negative strand" name="re_reverse" truevalue="true" type="boolean"/>
    <param checked="False" falsevalue="false" label="Include non-PF reads from the SAM file into the output FASTQ files." name="include_non_pf_reads" truevalue="true" type="boolean"/>
    <param help="Leave blank for null" label="The attribute that stores the position at which the SAM record should be clipped" name="clipping_attribute" type="text" value=""/>
    <param help="'X' means the reads and qualities should be trimmed at the clipped position; 'N' means the bases should be changed to Ns in the clipped region; and any integer means that the base qualities should be set to that value in the clipped region. Leave blank for null" label="The action that should be taken with clipped reads" name="clipping_action" type="text" value=""/>
    <param checked="False" falsevalue="false" help="Support of non-primary alignments in SamToFastq is not comprehensive, so there may be exceptions if this is set to true and there are paired reads with non-primary alignments." label="If true, include non-primary alignments in the output." name="include_non_primary_alignments" truevalue="true" type="boolean"/>
    
  </inputs>
  <outputs>
    <data format="fastqsanger" label="${tool.name} on ${on_string}: FASTQ 1" name="output_fastq1"/>
    <data format="fastqsanger" label="${tool.name} on ${on_string}: FASTQ 2" name="output_fastq2">
        <filter>single_paired_end_type['single_paired_end_type_selector'] == 'paired'</filter>
    </data>
  </outputs>
  <tests>
      <test>
          <param ftype="sam" name="input_sam" value="bfast_out1.sam"/>
          <param name="output_per_read_group_selector" value="per_sam_file"/>
          <param name="single_paired_end_type_selector" value="single"/>
          <param name="read1_trim" value=""/>
          <param name="read1_max_bases_to_write" value=""/>
          <param name="re_reverse" value="True"/>
          <param name="include_non_pf_reads" value="False"/>
          <param name="clipping_action" value=""/>
          <param name="clipping_attribute" value=""/>
          <param name="include_non_primary_alignments" value="False"/>
          <output file="random_phiX_1.fastqsanger" name="output_fastq1"/> 
      </test>
      <test>
          <param ftype="sam" name="input_sam" value="bwa_wrapper_out3.sam"/>
          <param name="output_per_read_group_selector" value="per_sam_file"/>
          <param name="single_paired_end_type_selector" value="paired"/>
          <param name="read1_trim" value=""/>
          <param name="read1_max_bases_to_write" value=""/>
          <param name="read2_trim" value=""/>
          <param name="read2_max_bases_to_write" value=""/>
          <param name="re_reverse" value="True"/>
          <param name="include_non_pf_reads" value="False"/>
          <param name="clipping_action" value=""/>
          <param name="clipping_attribute" value=""/>
          <param name="include_non_primary_alignments" value="False"/>
          <output file="bwa_wrapper_in2.fastqsanger" lines_diff="64" name="output_fastq1"/> <!-- 16 unaligned fastq blocks not present in original sam file -->
          <output file="bwa_wrapper_in3.fastqsanger" lines_diff="64" name="output_fastq2"/> <!-- 16 unaligned fastq blocks not present in original sam file -->
      </test>
      <test>
          <param ftype="sam" name="input_sam" value="bwa_wrapper_out3.sam"/>
          <param name="output_per_read_group_selector" value="per_read_group"/>
          <param name="single_paired_end_type_selector" value="paired"/>
          <param name="read1_trim" value=""/>
          <param name="read1_max_bases_to_write" value=""/>
          <param name="read2_trim" value=""/>
          <param name="read2_max_bases_to_write" value=""/>
          <param name="re_reverse" value="True"/>
          <param name="include_non_pf_reads" value="False"/>
          <param name="clipping_action" value=""/>
          <param name="clipping_attribute" value=""/>
          <param name="include_non_primary_alignments" value="False"/>
          <output file="bwa_wrapper_in2.fastqsanger" lines_diff="64" name="output_fastq1"/> <!-- 16 unaligned fastq blocks not present in original sam file -->
          <output file="bwa_wrapper_in3.fastqsanger" lines_diff="64" name="output_fastq2"/> <!-- 16 unaligned fastq blocks not present in original sam file -->
      </test>
  </tests>
  <help>
**What it does**

Picard: SamToFastq converts SAM files to FASTQ files.

Extracts read sequences and qualities from the input SAM/BAM file and writes them into the output file in Sanger fastq format. In the RC mode (default is True), if the read is aligned and the alignment is to the reverse strand on the genome, the read's sequence from input SAM file will be reverse-complemented prior to writing it to fastq in order restore correctly the original read sequence as it was generated by the sequencer.

------

Please cite the website &quot;http://picard.sourceforge.net&quot;.

------


**Input formats**

FastqToSam accepts SAM input files, see http://samtools.sourceforge.net for more details.

------

**Outputs**

The output is in FASTQ format. If using Paired end data, 2 fastq files are created.

-------

**FastqToSam settings**

This is list of SamToFastq options::
  
  INPUT=File	Input SAM/BAM file to extract reads from Required.
  FASTQ=File	Output fastq file (single-end fastq or, if paired, first end of the pair fastq). Required. Cannot be used in conjuction with option(s) OUTPUT_PER_RG (OPRG)
  SECOND_END_FASTQ=File	Output fastq file (if paired, second end of the pair fastq). Default value: null. Cannot be used in conjuction with option(s) OUTPUT_PER_RG (OPRG)
  OUTPUT_PER_RG=Boolean	Output a fastq file per read group (two fastq files per read group if the group is paired). Default value: false. This option can be set to 'null' to clear the default value. Possible values: {true, false} Cannot be used in conjuction with option(s) SECOND_END_FASTQ (F2) FASTQ (F)
  OUTPUT_DIR=File	Directory in which to output the fastq file(s). Used only when OUTPUT_PER_RG is true. Default value: null.
  RE_REVERSE=Boolean	Re-reverse bases and qualities of reads with negative strand flag set before writing them to fastq Default value: true. This option can be set to 'null' to clear the default value. Possible values: {true, false}
  INCLUDE_NON_PF_READS=Boolean	Include non-PF reads from the SAM file into the output FASTQ files. Default value: false. This option can be set to 'null' to clear the default value. Possible values: {true, false}
  CLIPPING_ATTRIBUTE=String	The attribute that stores the position at which the SAM record should be clipped Default value: null.
  CLIPPING_ACTION=String	The action that should be taken with clipped reads: 'X' means the reads and qualities should be trimmed at the clipped position; 'N' means the bases should be changed to Ns in the clipped region; and any integer means that the base qualities should be set to that value in the clipped region. Default value: null.
  READ1_TRIM=Integer	The number of bases to trim from the beginning of read 1. Default value: 0. This option can be set to 'null' to clear the default value.
  READ1_MAX_BASES_TO_WRITE=Integer	The maximum number of bases to write from read 1 after trimming. If there are fewer than this many bases left after trimming, all will be written. If this value is null then all bases left after trimming will be written. Default value: null.
  READ2_TRIM=Integer	The number of bases to trim from the beginning of read 2. Default value: 0. This option can be set to 'null' to clear the default value.
  READ2_MAX_BASES_TO_WRITE=Integer	The maximum number of bases to write from read 2 after trimming. If there are fewer than this many bases left after trimming, all will be written. If this value is null then all bases left after trimming will be written. Default value: null.
  INCLUDE_NON_PRIMARY_ALIGNMENTS=Boolean	If true, include non-primary alignments in the output. Support of non-primary alignments in SamToFastq is not comprehensive, so there may be exceptions if this is set to true and there are paired reads with non-primary alignments. Default value: false. This option can be set to 'null' to clear the default value. Possible values: {true, false} 


  </help>
</tool>