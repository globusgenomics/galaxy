<tool id="sam_to_bam" name="SAM-to-BAM" version="SAMTOOLS: 1.2">
  <description>converts SAM format to BAM format</description>
  <requirements>
    <requirement type="package">samtools</requirement>
  </requirements>
  <command interpreter="python">
    sam_to_bam.py
      --input1=$source.input1
      #if $source.index_source == &quot;history&quot;:
        --dbkey=${ref_file.metadata.dbkey} 
        --ref_file=$source.ref_file
      #else
        --dbkey=${input1.metadata.dbkey} 
      #end if
      --output1=$output1
      --index_dir=${GALAXY_DATA_INDEX_DIR}
     #if $advanced_options.advanced_select == &quot;yes&quot;:
       -p '-F &quot;${advanced_options.filter_bits}&quot;
           -q &quot;${advanced_options.quality_cutoff}&quot;
           '
     #end if
  </command>
  <inputs>
    <conditional name="source">
      <param label="Choose the source for the reference list" name="index_source" type="select">
        <option value="cached">Locally cached</option>
        <option value="history">History</option>
      </param>
      <when value="cached">
        <param format="sam" label="SAM File to Convert" metadata_name="dbkey" name="input1" type="data">
           <validator type="unspecified_build"/>
           <validator filename="sam_fa_indices.loc" line_startswith="index" message="Sequences are not currently available for the specified build." metadata_column="1" metadata_name="dbkey" type="dataset_metadata_in_file"/>
        </param>
      </when>
      <when value="history">
        <param format="sam" label="Convert SAM file" name="input1" type="data"/>
        <param format="fasta" label="Using reference file" metadata_name="dbkey" name="ref_file" type="data"/>
      </when>
    </conditional>
    <conditional name="advanced_options">
      <param label="Set Advanced options" name="advanced_select" type="select">
        <option value="yes">Yes</option>
        <option selected="True" value="no">No</option>
      </param>
      <when value="no"/>
      <when value="yes">
        <param label="Quality Score Cutoff" name="quality_cutoff" type="integer" value="0"/>
        <param label="Bit to filter from the FLAG field" name="filter_bits" type="integer" value="0"/>
      </when>
    </conditional>
  </inputs>
  <outputs>
    <data format="bam" label="${tool.name} on ${on_string}: converted BAM" name="output1">
      <actions>
        <conditional name="source.index_source">
          <when value="cached">
            <action name="dbkey" type="metadata">
              <option name="source.input1" param_attribute="dbkey" type="from_param"/>
            </action>
          </when>
          <when value="history">
            <action name="dbkey" type="metadata">
              <option name="source.ref_file" param_attribute="dbkey" type="from_param"/>
            </action>
          </when>
        </conditional>
      </actions>
    </data>
  </outputs>
  <tests>
    <test>
      <!--
      Sam-to-Bam command:
      cp test-data/chr_m.fasta .
      samtools faidx chr_m.fasta
      samtools view -hbt chr_m.fasta.fai -o unsorted.bam test-data/sam_to_bam_in1.sam
      samtools sort unsorted.bam sam_to_bam_out1
      chr_m.fasta is the reference file (chrM from equCab2)
      -->
      <param name="index_source" value="history"/> 
      <param ftype="sam" name="input1" value="sam_to_bam_in1.sam"/>
      <param dbkey="equCab2" ftype="fasta" name="ref_file" value="chr_m.fasta"/>
      <output file="sam_to_bam_out1.bam" ftype="bam" name="output1"/>
    </test>
    <test>
      <!--
      Sam-to-Bam command:
      samtools view -hbt chr_m.fasta.fai -o unsorted.bam test-data/sam_to_bam_in1.sam
      samtools sort unsorted.bam sam_to_bam_out2
      chr_m.fasta is the reference file and the index chr_m.fasta.fai 
      these should be in the same directory, and chrM is from equCab2
      -->
      <param name="index_source" value="cached"/>
      <param dbkey="chrM" ftype="sam" name="input1" value="sam_to_bam_in1.sam"/>
      <output file="sam_to_bam_out2.bam" ftype="bam" name="output1"/>
    </test>
  </tests>
  <help>

**What it does**

This tool uses the SAMTools_ toolkit to produce an indexed BAM file based on a sorted input SAM file.

.. _SAMTools: http://samtools.sourceforge.net/samtools.shtml

------

**Citation**

For the underlying tool, please cite `Li H, Handsaker B, Wysoker A, Fennell T, Ruan J, Homer N, Marth G, Abecasis G, Durbin R; 1000 Genome Project Data Processing Subgroup. The Sequence Alignment/Map format and SAMtools. Bioinformatics. 2009 Aug 15;25(16):2078-9. &lt;http://www.ncbi.nlm.nih.gov/pubmed/19505943&gt;`_

  </help>
</tool>