<tool id="gatk2_reduce_reads" name="Reduce Reads" version="GATK: 1.0.5974; SAMTOOLS: 0.1.18">
  <description>in BAM files</description>
  <requirements>
      <requirement type="package">gatk</requirement>
      <requirement type="package" version="0.1.18">samtools</requirement>
  </requirements>
  <command interpreter="python">gatk2_wrapper.py
   --max_jvm_heap_fraction &quot;1&quot;
   --stdout &quot;${output_log}&quot;
   -d &quot;-I&quot; &quot;${reference_source.input_bam}&quot; &quot;${reference_source.input_bam.ext}&quot; &quot;gatk_input&quot;
   #if str( $reference_source.input_bam.metadata.bam_index ) != &quot;None&quot;:
       -d &quot;&quot; &quot;${reference_source.input_bam.metadata.bam_index}&quot; &quot;bam_index&quot; &quot;gatk_input&quot; ##hardcode galaxy ext type as bam_index
   #end if
   -p 'java 
    -jar &quot;\$GATK2_PATH/GenomeAnalysisTK.jar&quot;
    -T &quot;ReduceReads&quot;
    -o &quot;${output_bam}&quot;
    ## \$GATK2_SITE_OPTIONS
    ## \$GATK2_NUM_THREADS
    ##-et &quot;NO_ET&quot; -K &quot;/data/galaxy/appList/GenomeAnalysisTK-2.0-36-gf5c1c1a/gatk2_key_file&quot; ##ET no phone home
    ##--num_threads 32 ##not supported yet
    ##-log &quot;${output_log}&quot; ##don't use this to log to file, instead directly capture stdout
    #if $reference_source.reference_source_selector != &quot;history&quot;:
        -R &quot;${reference_source.ref_file.fields.path}&quot;
    #end if
    #if str($input_recal) != 'None':
        --BQSR &quot;${input_recal}&quot;
    #end if
    --disable_bam_indexing
   '
    ##start standard gatk options
    #if $gatk_param_type.gatk_param_type_selector == &quot;advanced&quot;:
        #for $pedigree in $gatk_param_type.pedigree:
            -p '--pedigree &quot;${pedigree.pedigree_file}&quot;'
        #end for
        #for $pedigree_string in $gatk_param_type.pedigree_string_repeat:
            -p '--pedigreeString &quot;${pedigree_string.pedigree_string}&quot;'
        #end for
        -p '--pedigreeValidationType &quot;${gatk_param_type.pedigree_validation_type}&quot;'
        #set default_read_filters = ['MalformedRead']
        #for $read_filter in $gatk_param_type.read_filter:
            -p '
            #if $read_filter.read_filter_type.read_filter_type_selector not in $default_read_filters:
                --read_filter &quot;${read_filter.read_filter_type.read_filter_type_selector}&quot;
            #end if
            #for $name, $param in $read_filter.read_filter_type.iteritems():
                #if $name not in [ &quot;__current_case__&quot;, &quot;read_filter_type_selector&quot; ]:
                    #if hasattr( $param.input, 'truevalue' ):
                        ${param}
                    #else:
                        --${name} &quot;${param}&quot;
                    #end if
                #end if
            #end for
            '
        #end for
        #for $interval_count, $input_intervals in enumerate( $gatk_param_type.input_interval_repeat ):
            -d &quot;--intervals&quot; &quot;${input_intervals.input_intervals}&quot; &quot;${input_intervals.input_intervals.ext}&quot; &quot;input_intervals_${interval_count}&quot;
        #end for
        
        #for $interval_count, $input_intervals in enumerate( $gatk_param_type.input_exclude_interval_repeat ):
            -d &quot;--excludeIntervals&quot; &quot;${input_intervals.input_exclude_intervals}&quot; &quot;${input_intervals.input_exclude_intervals.ext}&quot; &quot;input_exlude_intervals_${interval_count}&quot;
        #end for

        -p '--interval_set_rule &quot;${gatk_param_type.interval_set_rule}&quot;'
        
        -p '--downsampling_type &quot;${gatk_param_type.downsampling_type.downsampling_type_selector}&quot;'
        #if str( $gatk_param_type.downsampling_type.downsampling_type_selector ) != &quot;NONE&quot;:
            -p '--${gatk_param_type.downsampling_type.downsample_to_type.downsample_to_type_selector} &quot;${gatk_param_type.downsampling_type.downsample_to_type.downsample_to_value}&quot;'
        #end if
        -p '
        --baq &quot;${gatk_param_type.baq}&quot;
        --baqGapOpenPenalty &quot;${gatk_param_type.baq_gap_open_penalty}&quot;
        ${gatk_param_type.use_original_qualities}
        --defaultBaseQualities &quot;${gatk_param_type.default_base_qualities}&quot;
        --validation_strictness &quot;${gatk_param_type.validation_strictness}&quot;
        --interval_merging &quot;${gatk_param_type.interval_merging}&quot;
        ${gatk_param_type.disable_experimental_low_memory_sharding}
        ${gatk_param_type.fix_misencoded_quality_scores}
        ${gatk_param_type.non_deterministic_random_seed}
        '
        #for $rg_black_list_count, $rg_black_list in enumerate( $gatk_param_type.read_group_black_list_repeat ):
            #if $rg_black_list.read_group_black_list_type.read_group_black_list_type_selector == &quot;file&quot;:
                -d &quot;--read_group_black_list&quot; &quot;${rg_black_list.read_group_black_list_type.read_group_black_list}&quot; &quot;txt&quot; &quot;input_read_group_black_list_${rg_black_list_count}&quot;
            #else
                -p '--read_group_black_list &quot;${rg_black_list.read_group_black_list_type.read_group_black_list}&quot;'
            #end if
        #end for
    #end if
    
    #if str( $reference_source.reference_source_selector ) == &quot;history&quot;:
        -d &quot;-R&quot; &quot;${reference_source.ref_file}&quot; &quot;${reference_source.ref_file.ext}&quot; &quot;gatk_input_reference_fasta&quot;
        --picard_jar &quot;${GALAXY_DATA_INDEX_DIR}/shared/jars/picard/CreateSequenceDictionary.jar&quot;
    #end if
    ##end standard gatk options
    
    ##start analysis specific options
    #if $analysis_param_type.analysis_param_type_selector == &quot;advanced&quot;:
        -p '
        #if $analysis_param_type.context_size.__str__.strip() != '':
            --context_size $analysis_param_type.context_size
        #end if
        #if $analysis_param_type.downsample_coverage.__str__.strip() != '':
            --downsample_coverage $analysis_param_type.downsample_coverage
        #end if
        #if $analysis_param_type.minimum_del_proportion_to_trigger_variant.__str__.strip() != '':
            --minimum_del_proportion_to_trigger_variant $analysis_param_type.minimum_del_proportion_to_trigger_variant
        #end if
        #if $analysis_param_type.minimum_mapping_quality.__str__.strip() != '':
            --minimum_mapping_quality $analysis_param_type.minimum_mapping_quality
        #end if
        #if $analysis_param_type.minimum_tail_qualities.__str__.strip() != '':
            --minimum_tail_qualities $analysis_param_type.minimum_tail_qualities
        #end if
        #if $analysis_param_type.minimum_base_quality_to_consider.__str__.strip() != '':
            --minimum_base_quality_to_consider $analysis_param_type.minimum_base_quality_to_consider
        #end if
        #if $analysis_param_type.minimum_alt_proportion_to_trigger_variant.__str__.strip() != '':
            --minimum_alt_proportion_to_trigger_variant $analysis_param_type.minimum_alt_proportion_to_trigger_variant
        #end if
        $analysis_param_type.allow_polyploid_reduction
        $analysis_param_type.dont_compress_read_names
        $analysis_param_type.dont_hardclip_low_qual_tails
        $analysis_param_type.dont_simplify_reads
        $analysis_param_type.dont_use_softclipped_bases
        $analysis_param_type.hard_clip_to_interval
        $analysis_param_type.dont_hardclip_adaptor_sequences
        '
    #end if
  </command>
  <inputs>
    <param format="csv" help="-BQSR,--BQSR &amp;lt;recal_file&amp;gt;" label="Covariates table recalibration file" name="input_recal" optional="true" type="data">
      <help>The input covariates table file which enables on-the-fly base quality score recalibration. 
            Enables on-the-fly recalibrate of base qualities. The covariates tables are produced by the BaseQualityScoreRecalibrator tool. 
            Please be aware that one should only run recalibration with the covariates file created on the same input bam(s).
      </help>
    </param>
    <conditional name="reference_source">
      <param label="Choose the source for the reference list" name="reference_source_selector" type="select">
        <option value="cached">Locally cached</option>
        <option value="history">History</option>
      </param>
      <when value="cached">
        <param format="bam" help="-I,--input_file &amp;lt;input_file&amp;gt;" label="BAM file" name="input_bam" type="data">
          <validator type="unspecified_build"/>
          <validator message="Sequences are not currently available for the specified build." metadata_column="dbkey" metadata_name="dbkey" table_name="gatk2_picard_indexes" type="dataset_metadata_in_data_table"/> <!-- fixme!!! this needs to be a select -->
        </param>
        <param help="-R,--reference_sequence &amp;lt;reference_sequence&amp;gt;" label="Using reference genome" name="ref_file" type="select">
          <options from_data_table="gatk2_picard_indexes">
            <filter column="dbkey" key="dbkey" ref="input_bam" type="data_meta"/>
          </options>
          <validator message="A built-in reference genome is not available for the build associated with the selected input file" type="no_options"/>
        </param>
      </when>
      <when value="history">
        <param format="bam" help="-I,--input_file &amp;lt;input_file&amp;gt;" label="BAM file" name="input_bam" type="data"/>
        <param format="fasta" help="-R,--reference_sequence &amp;lt;reference_sequence&amp;gt;" label="Using reference file" name="ref_file" type="data">
          <options>
            <filter key="dbkey" ref="input_bam" type="data_meta"/>
          </options>
        </param>
      </when>
    </conditional>
    
    <conditional name="gatk_param_type">
      <param label="Basic or Advanced GATK options" name="gatk_param_type_selector" type="select">
        <option selected="True" value="basic">Basic</option>
        <option value="advanced">Advanced</option>
      </param>
      <when value="basic">
        <!-- Do nothing here -->
      </when>
      <when value="advanced">
        <repeat help="-ped,--pedigree &amp;lt;pedigree&amp;gt;" name="pedigree" title="Pedigree file">
            <param format="txt" label="Pedigree files for samples" name="pedigree_file" type="data"/>
        </repeat>
        <repeat help="-pedString,--pedigreeString &amp;lt;pedigreeString&amp;gt;" name="pedigree_string_repeat" title="Pedigree string">
            <param label="Pedigree string for samples" name="pedigree_string" type="text" value=""/>
        </repeat>
        <param help="-pedValidationType,--pedigreeValidationType &amp;lt;pedigreeValidationType&amp;gt;" label="How strict should we be in validating the pedigree information" name="pedigree_validation_type" type="select">
          <option selected="True" value="STRICT">STRICT</option>
          <option value="SILENT">SILENT</option>
        </param>
        <repeat help="-rf,--read_filter &amp;lt;read_filter&amp;gt;" name="read_filter" title="Read Filter">
            <conditional name="read_filter_type">
              <param label="Read Filter Type" name="read_filter_type_selector" type="select">
                <option value="BadCigar">BadCigar</option>
                <option value="BadMate">BadMate</option>
                <option value="DuplicateRead">DuplicateRead</option>
                <option value="FailsVendorQualityCheck">FailsVendorQualityCheck</option>
                <option value="MalformedRead">MalformedRead</option>
                <option value="MappingQuality">MappingQuality</option>
                <option value="MappingQualityUnavailable">MappingQualityUnavailable</option>
                <option value="MappingQualityZero">MappingQualityZero</option>
                <option value="MateSameStrand">MateSameStrand</option>
                <option value="MaxInsertSize">MaxInsertSize</option>
                <option selected="True" value="MaxReadLength">MaxReadLength</option>
                <option value="MissingReadGroup">MissingReadGroup</option>
                <option value="NoOriginalQualityScores">NoOriginalQualityScores</option>
                <option value="NotPrimaryAlignment">NotPrimaryAlignment</option>
                <option value="Platform454">Platform454</option>
                <option value="Platform">Platform</option>
                <option value="PlatformUnit">PlatformUnit</option>
                <option value="ReadGroupBlackList">ReadGroupBlackList</option>
                <option value="ReadName">ReadName</option>
                <option value="ReadStrand">ReadStrand</option>
                <option value="ReassignMappingQuality">ReassignMappingQuality</option>
                <option value="Sample">Sample</option>
                <option value="SingleReadGroup">SingleReadGroup</option>
                <option value="UnmappedRead">UnmappedRead</option>
              </param>
              <when value="BadCigar">
                  <!-- no extra options -->
              </when>
              <when value="BadMate">
                  <!-- no extra options -->
              </when>
              <when value="DuplicateRead">
                  <!-- no extra options -->
              </when>
              <when value="FailsVendorQualityCheck">
                  <!-- no extra options -->
              </when>
              <when value="MalformedRead">
                  <param checked="false" falsevalue="" help="filter out the mismatch reads instead of quitting with an error" label="filter out the reads with mismatching number of bases and base qualities" name="filter_mismatching_base_and_quals" truevalue="--filter_mismatching_base_and_quals" type="boolean"/>
              </when>
              <when value="MappingQuality">
                  <param label="Minimum read mapping quality required to consider a read for calling" name="min_mapping_quality_score" type="integer" value="10"/>
              </when>
              <when value="MappingQualityUnavailable">
                  <!-- no extra options -->
              </when>
              <when value="MappingQualityZero">
                  <!-- no extra options -->
              </when>
              <when value="MateSameStrand">
                  <!-- no extra options -->
              </when>
              <when value="MaxInsertSize">
                  <param label="Discard reads with insert size greater than the specified value" name="maxInsertSize" type="integer" value="1000000"/>
              </when>
              <when value="MaxReadLength">
                  <param label="Max Read Length" name="maxReadLength" type="integer" value="76"/>
              </when>
              <when value="MissingReadGroup">
                  <!-- no extra options -->
              </when>
              <when value="NoOriginalQualityScores">
                  <!-- no extra options -->
              </when>
              <when value="NotPrimaryAlignment">
                  <!-- no extra options -->
              </when>
              <when value="Platform454">
                  <!-- no extra options -->
              </when>
              <when value="Platform">
                  <param label="Discard reads with RG:PL attribute containing this string" name="PLFilterName" type="text" value=""/>
              </when>
              <when value="PlatformUnit">
                  <!-- no extra options -->
              </when>
              <when value="ReadGroupBlackList">
                  <!-- no extra options -->
              </when>
              <when value="ReadName">
                  <param label="Filter out all reads except those with this read name" name="readName" type="text" value=""/>
              </when>
              <when value="ReadStrand">
                  <param falsevalue="" label="Discard reads on the forward strand" name="filterPositive" truevalue="--filterPositive" type="boolean"/>
              </when>
              <when value="ReassignMappingQuality">
                  <param label="Default read mapping quality to assign to all reads" name="default_mapping_quality" type="integer" value="60"/>
              </when>
              <when value="Sample">
                  <param label="The name of the sample(s) to keep, filtering out all others" name="sample_to_keep" type="text" value=""/>
              </when>
              <when value="SingleReadGroup">
                  <param label="The name of the read group to keep, filtering out all others" name="read_group_to_keep" type="integer" value="76"/>
              </when>
              <when value="UnmappedRead">
                  <!-- no extra options -->
              </when>
            </conditional>
        </repeat>
        <repeat help="-L,--intervals &amp;lt;intervals&amp;gt;" name="input_interval_repeat" title="Operate on Genomic intervals">
          <param format="bed,gatk_interval,picard_interval_list,vcf" label="Genomic intervals" name="input_intervals" type="data"/>
        </repeat>
        <repeat help="-XL,--excludeIntervals &amp;lt;excludeIntervals&amp;gt;" name="input_exclude_interval_repeat" title="Exclude Genomic intervals">
          <param format="bed,gatk_interval,picard_interval_list,vcf" label="Genomic intervals" name="input_exclude_intervals" type="data"/>
        </repeat>
        
        <param help="-isr,--interval_set_rule &amp;lt;interval_set_rule&amp;gt;" label="Interval set rule" name="interval_set_rule" type="select">
          <option selected="True" value="UNION">UNION</option>
          <option value="INTERSECTION">INTERSECTION</option>
        </param>
        
        <conditional name="downsampling_type">
          <param help="-dt,--downsampling_type &amp;lt;downsampling_type&amp;gt;" label="Type of reads downsampling to employ at a given locus" name="downsampling_type_selector" type="select">
            <option selected="True" value="NONE">NONE</option>
            <option value="ALL_READS">ALL_READS</option>
            <option value="BY_SAMPLE">BY_SAMPLE</option>
          </param>
          <when value="NONE">
              <!-- no more options here -->
          </when>
          <when value="ALL_READS">
              <conditional name="downsample_to_type">
                  <param label="Downsample method" name="downsample_to_type_selector" type="select">
                      <option selected="True" value="downsample_to_fraction">Downsample by Fraction</option>
                      <option value="downsample_to_coverage">Downsample by Coverage</option>
                  </param>
                  <when value="downsample_to_fraction">
                      <param help="-dfrac,--downsample_to_fraction &amp;lt;downsample_to_fraction&amp;gt;" label="Fraction [0.0-1.0] of reads to downsample to" max="1" min="0" name="downsample_to_value" type="float" value="1"/>
                  </when>
                  <when value="downsample_to_coverage">
                      <param help="-dcov,--downsample_to_coverage &amp;lt;downsample_to_coverage&amp;gt;" label="Coverage to downsample to at any given locus" name="downsample_to_value" type="integer" value="0"/>
                  </when>
              </conditional>
          </when>
          <when value="BY_SAMPLE">
              <conditional name="downsample_to_type">
                  <param label="Downsample method" name="downsample_to_type_selector" type="select">
                      <option selected="True" value="downsample_to_fraction">Downsample by Fraction</option>
                      <option value="downsample_to_coverage">Downsample by Coverage</option>
                  </param>
                  <when value="downsample_to_fraction">
                      <param help="-dfrac,--downsample_to_fraction &amp;lt;downsample_to_fraction&amp;gt;" label="Fraction [0.0-1.0] of reads to downsample to" max="1" min="0" name="downsample_to_value" type="float" value="1"/>
                  </when>
                  <when value="downsample_to_coverage">
                      <param help="-dcov,--downsample_to_coverage &amp;lt;downsample_to_coverage&amp;gt;" label="Coverage to downsample to at any given locus" name="downsample_to_value" type="integer" value="0"/>
                  </when>
              </conditional>
          </when>
        </conditional>
        <param help="-baq,--baq &amp;lt;baq&amp;gt;" label="Type of BAQ calculation to apply in the engine" name="baq" type="select">
          <option selected="True" value="OFF">OFF</option>
          <option value="CALCULATE_AS_NECESSARY">CALCULATE_AS_NECESSARY</option>
          <option value="RECALCULATE">RECALCULATE</option>
        </param>
        <param help="Default value is 40. 30 is perhaps better for whole genome call sets. -baqGOP,--baqGapOpenPenalty &amp;lt;baqGapOpenPenalty&amp;gt;" label="BAQ gap open penalty (Phred Scaled)" name="baq_gap_open_penalty" type="float" value="40"/>
        <param falsevalue="" help="-OQ,--useOriginalQualities" label="Use the original base quality scores from the OQ tag" name="use_original_qualities" truevalue="--useOriginalQualities" type="boolean"/>
        <param help="-DBQ,--defaultBaseQualities &amp;lt;defaultBaseQualities&amp;gt;" label="Value to be used for all base quality scores, when some are missing" name="default_base_qualities" type="integer" value="-1"/>
        <param help="-S,--validation_strictness &amp;lt;validation_strictness&amp;gt;" label="How strict should we be with validation" name="validation_strictness" type="select">
          <option selected="True" value="STRICT">STRICT</option>
          <option value="LENIENT">LENIENT</option>
          <option value="SILENT">SILENT</option>
          <!-- <option value="DEFAULT_STRINGENCY">DEFAULT_STRINGENCY</option> listed in docs, but not valid value...-->
        </param>
        <param help="-im,--interval_merging &amp;lt;interval_merging&amp;gt;" label="Interval merging rule" name="interval_merging" type="select">
          <option selected="True" value="ALL">ALL</option>
          <option value="OVERLAPPING_ONLY">OVERLAPPING_ONLY</option>
        </param>
        
        <repeat help="-rgbl,--read_group_black_list &amp;lt;read_group_black_list&amp;gt;" name="read_group_black_list_repeat" title="Read group black list">
          <conditional name="read_group_black_list_type">
            <param label="Type of reads read group black list" name="read_group_black_list_type_selector" type="select">
              <option selected="True" value="file">Filters in file</option>
              <option value="text">Specify filters as a string</option>
            </param>
            <when value="file">
              <param format="txt" label="Read group black list file" name="read_group_black_list" type="data"/>
            </when>
            <when value="text">
              <param label="Read group black list tag:string" name="read_group_black_list" type="text" value="tag:string"/>
            </when>
          </conditional>
        </repeat>
        
        <param checked="False" falsevalue="" help="--disable_experimental_low_memory_sharding" label="Disable experimental low-memory sharding functionality." name="disable_experimental_low_memory_sharding" truevalue="--disable_experimental_low_memory_sharding" type="boolean"/>
        <param checked="False" falsevalue="" help="-ndrs,--nonDeterministicRandomSeed" label="Makes the GATK behave non deterministically, that is, the random numbers generated will be different in every run" name="non_deterministic_random_seed" truevalue="--nonDeterministicRandomSeed" type="boolean"/>
        <param checked="False" falsevalue="" help="-fixMisencodedQuals / --fix_misencoded_quality_scores" label="Fix mis-encoded base quality scores. Q0 == ASCII 33 according to the SAM specification, whereas Illumina encoding starts at Q64. The idea here is simple: we just iterate over all reads and subtract 31 from every quality score." name="fix_misencoded_quality_scores" truevalue="--fix_misencoded_quality_scores" type="boolean"/>
        
      </when>
    </conditional>
    
    <conditional name="analysis_param_type">
      <param label="Basic or Advanced Analysis options" name="analysis_param_type_selector" type="select">
        <option selected="True" value="basic">Basic</option>
        <option value="advanced">Advanced</option>
      </param>
      <when value="basic">
        <!-- Do nothing here -->
      </when>
      <when value="advanced">
        <param checked="False" falsevalue="" help="--allow_polyploid_reduction / -polyploid Allow the experimental polyploid-based reduction capabilities" label="Allow polyploid-based reduction" name="allow_polyploid_reduction" truevalue="-polyploid" type="boolean"/>
        <param help="The number of bases to keep around mismatches (potential variation)" label="context_size" name="context_size" optional="true" type="integer" value="10">
        </param>
        <param checked="False" falsevalue="" help="--dont_compress_read_names / -nocmp_names  By default, ReduceReads will compress read names to numbers and guarantee uniqueness and reads with similar name will still have similar compressed names. Note: If you scatter/gather there is no guarantee that read name uniqueness will be maintained -- in this case we recommend not compressing." label="Do not compress read names." name="dont_compress_read_names" truevalue="-nocmp_names" type="boolean"/>
        <param checked="False" falsevalue="" help="--dont_hardclip_low_qual_tails / -noclip_tail This option overrides the argument of minimum tail quality" label="Do not hard clip the low quality tails of the reads" name="dont_hardclip_low_qual_tails" truevalue="-noclip_tail" type="boolean"/>

        <param checked="False" falsevalue="" help="--dont_simplify_reads / -nosimplify Do not simplify read (strip away all extra information of the read -- anything other than bases, quals and read group)." label="Do not simplify read" name="dont_simplify_reads" truevalue="-nosimplify" type="boolean"/>
        <param checked="False" falsevalue="" help="--dont_use_softclipped_bases / -no_soft  Do not use high quality soft-clipped bases. By default, ReduceReads will hard clip away any low quality soft clipped base left by the aligner and use the high quality soft clipped bases in it's traversal algorithm to identify variant regions. The minimum quality for soft clipped bases is the same as the minimum base quality to consider (minqual)" label="Do not use high quality soft-clipped bases" name="dont_use_softclipped_bases" truevalue="-no_soft" type="boolean"/>
        <param help="Downsamples the coverage of a variable region approximately (guarantees the minimum to be equal to this). A value of 0 turns downsampling off." label="Downsample the coverage of a variable region" name="downsample_coverage" optional="true" type="integer" value="250">
        </param>
        <param checked="False" falsevalue="" help="--hard_clip_to_interval / -clip_int  Optionally hard clip all incoming reads to the desired intervals. The hard clips will happen exactly at the interval border." label="Hard clip all incoming reads" name="hard_clip_to_interval" truevalue="-clip_int" type="boolean"/>
        <param help="--minimum_del_proportion_to_trigger_variant / -mindel   Minimum proportion of indels in a site to trigger a variant region. Anything below this will be considered consensus.  " label="Minimum proportion of indels in a site to trigger a variant region" name="minimum_del_proportion_to_trigger_variant" optional="true" type="float" value="0.05">
        </param>
        <param help="--minimum_mapping_quality / -minmap  The minimum mapping quality to be considered for the consensus synthetic read. Reads that have mapping quality below this threshold will not be counted towards consensus, but are still counted towards variable regions." label="Minimum mapping quality for consensus read" name="minimum_mapping_quality" optional="true" type="integer" value="20">
        </param>
        <param help="--minimum_tail_qualities / -mintail  Reads have notoriously low quality bases on the tails (left and right). Consecutive bases with quality lower than this threshold will be hard clipped off before entering the reduce reads algorithm." label="Minimum tail quality" name="minimum_tail_qualities" optional="true" type="integer" value="2">
            <validator max="127" message="value between 0 and 127" min="0" type="in_range"/>
        </param>
        <param help="--minimum_mapping_quality / -minmap  The minimum mapping quality to be considered for the consensus synthetic read. Reads that have mapping quality below this threshold will not be counted towards consensus, but are still counted towards variable regions." label="Minimum mapping quality for consensus read" name="minimum_base_quality_to_consider" optional="true" type="integer" value="20">
            <validator max="127" message="value between 0 and 127" min="0" type="in_range"/>
        </param>
        <param help="--minimum_alt_proportion_to_trigger_variant / -minvar  Minimum proportion of mismatches in a site to trigger a variant region. Anything below this will be considered consensus." label="Minimum proportion of mismatches in a site to trigger a variant region" name="minimum_alt_proportion_to_trigger_variant" optional="true" type="float" value="0.05">
            <validator max="1.0" message="value between 0.00 and 1.00" min="0.0" type="in_range"/>
        </param>
        <param checked="False" falsevalue="" help="--dont_hardclip_adaptor_sequences / -noclip_ad  Do not hard clip adaptor sequences. Note: You don't have to turn this on for reads that are not mate paired. The program will behave correctly in those cases." label="Do not hard clip adaptor sequences" name="dont_hardclip_adaptor_sequences" truevalue="-noclip_ad" type="boolean"/>
      </when>
    </conditional>
  </inputs>
  <outputs>
    <data format="bam" label="${tool.name} on ${on_string} (BAM)" name="output_bam"/>
    <data format="txt" label="${tool.name} on ${on_string} (log)" name="output_log"/>
  </outputs>
  <tests>
      <test>
          <param ftype="csv" name="input_recal" value="gatk/gatk_count_covariates/gatk_count_covariates_out_1.csv"/> 
          <param name="reference_source_selector" value="history"/>
          <param ftype="fasta" name="ref_file" value="phiX.fasta"/>
          <param ftype="bam" name="input_bam" value="gatk/gatk_indel_realigner/gatk_indel_realigner_out_1.bam"/>
          <param name="gatk_param_type_selector" value="basic"/>
          <param name="analysis_param_type_selector" value="basic"/>
          <output file="gatk/gatk_table_recalibration/gatk_table_recalibration_out_1.bam" ftype="bam" lines_diff="4" name="output_bam"/>
          <output compare="contains" file="gatk/gatk_table_recalibration/gatk_table_recalibration_out_1.log.contains" name="output_log"/>
      </test>
  </tests>
  <help>
**What it does**

ReduceReads
Reduces the BAM file using read based compression that keeps only essential information for variant calling

This walker will generated reduced versions of the BAM files that still follow the BAM spec and contain all the information necessary for the GSA variant calling pipeline. Some options allow you to tune in how much compression you want to achieve. The default values have been shown to reduce a typical whole exome BAM file 100x. The higher the coverage, the bigger the savings in file size and performance of the downstream tools.

For more information on using read based compression in the GATK, see this `tool specific page &lt;http://www.broadinstitute.org/gatk/gatkdocs/org_broadinstitute_sting_gatk_walkers_compression_reducereads_ReduceReads.html&gt;`_.

To learn about best practices for variant detection using GATK, see this `overview &lt;http://www.broadinstitute.org/gatk/guide/topic?name=best-practices&gt;`_.

If you encounter errors, please view the `GATK FAQ &lt;http://www.broadinstitute.org/gatk/guide/topic?name=faqs&gt;`_.

------

**Inputs**

GenomeAnalysisTK: PrintReads accepts an aligned BAM and a recalibration CSV input files.


**Outputs**

The output is in BAM format.


Go `here &lt;http://www.broadinstitute.org/gatk/guide/topic?name=intro&gt;`_ for details on GATK file formats.

-------

**Settings**::


 --allow_polyploid_reduction / -polyploid ( boolean with default value false )
 Allow the experimental polyploid-based reduction capabilities of this tool

 --context_size / -cs ( int with default value 10 )
 The number of bases to keep around mismatches (potential variation)

 --dont_compress_read_names / -nocmp_names ( boolean with default value false )
 Do not compress read names. By default, ReduceReads will compress read names to numbers and guarantee uniqueness and reads with similar name will still have similar compressed names. Note: If you scatter/gather there is no guarantee that read name uniqueness will be maintained -- in this case we recommend not compressing.

 --dont_hardclip_low_qual_tails / -noclip_tail ( boolean with default value false )
 Do not hard clip the low quality tails of the reads. This option overrides the argument of minimum tail quality.

 --dont_simplify_reads / -nosimplify ( boolean with default value false )
 Do not simplify read (strip away all extra information of the read -- anything other than bases, quals and read group).

 --dont_use_softclipped_bases / -no_soft ( boolean with default value false )
 Do not use high quality soft-clipped bases. By default, ReduceReads will hard clip away any low quality soft clipped base left by the aligner and use the high quality soft clipped bases in it's traversal algorithm to identify variant regions. The minimum quality for soft clipped bases is the same as the minimum base quality to consider (minqual)

 --downsample_coverage / -ds ( int with default value 250 )
 Downsamples the coverage of a variable region approximately (guarantees the minimum to be equal to this). A value of 0 turns downsampling off.

 --hard_clip_to_interval / -clip_int ( boolean with default value false )
 Optionally hard clip all incoming reads to the desired intervals. The hard clips will happen exactly at the interval border.

 -mindel / --minimum_del_proportion_to_trigger_variant ( double with default value 0.05 )
 Minimum proportion of indels in a site to trigger a variant region. Anything below this will be considered consensus.

 --minimum_mapping_quality / -minmap ( int with default value 20 )
 The minimum mapping quality to be considered for the consensus synthetic read. Reads that have mapping quality below this threshold will not be counted towards consensus, but are still counted towards variable regions.

 --minimum_tail_qualities / -mintail ( byte with default value 2 )
 Reads have notoriously low quality bases on the tails (left and right). Consecutive bases with quality lower than this threshold will be hard clipped off before entering the reduce reads algorithm.

 -minqual / --minimum_base_quality_to_consider ( byte with default value 20 )
 The minimum base quality to be considered for the consensus synthetic read. Reads that have base quality below this threshold will not be counted towards consensus, but are still counted towards variable regions.

 -minvar / --minimum_alt_proportion_to_trigger_variant ( double with default value 0.05 )
 Minimum proportion of mismatches in a site to trigger a variant region. Anything below this will be considered consensus.

 -noclip_ad / --dont_hardclip_adaptor_sequences ( boolean with default value false )
 Do not hard clip adaptor sequences. Note: You don't have to turn this on for reads that are not mate paired. The program will behave correctly in those cases.

------

**Citation**

For the underlying tool, please cite `DePristo MA, Banks E, Poplin R, Garimella KV, Maguire JR, Hartl C, Philippakis AA, del Angel G, Rivas MA, Hanna M, McKenna A, Fennell TJ, Kernytsky AM, Sivachenko AY, Cibulskis K, Gabriel SB, Altshuler D, Daly MJ. A framework for variation discovery and genotyping using next-generation DNA sequencing data. Nat Genet. 2011 May;43(5):491-8. &lt;http://www.ncbi.nlm.nih.gov/pubmed/21478889&gt;`_

Please also site `McKenna A, Hanna M, Banks E, Sivachenko A, Cibulskis K, Kernytsky A, Garimella K, Altshuler D, Gabriel S, Daly M, DePristo MA (2010). The Genome Analysis Toolkit: a MapReduce framework for analyzing next-generation DNA sequencing data. Genome Res. 20:1297-303. Epub 2010 Jul 19. &lt;http://www.ncbi.nlm.nih.gov/pubmed/20644199&gt;`_

If you use this tool in Galaxy, please cite `Blankenberg D, Von Kuster G, Coraor N, Ananda G, Lazarus R, Mangan M, Nekrutenko A, Taylor J. Galaxy: a web-based genome analysis tool for experimentalists. Curr Protoc Mol Biol. 2010 Jan;Chapter 19:Unit 19.10.1-21. &lt;http://www.ncbi.nlm.nih.gov/pubmed/20069535&gt;`_

  </help>
</tool>