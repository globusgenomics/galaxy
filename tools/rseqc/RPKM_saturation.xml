<tool id="RPKM_saturation" name="RPKM Saturation" version="RSEQC: 2.3.3">
	<description>calculates raw count and RPKM values for transcript at exon, intron, and mRNA level</description>
	<requirements>
		<requirement type="package">R</requirement>
		<requirement type="package">rseqc</requirement>
                <requirement type="package">pymodules</requirement>
	</requirements>
	<command> RPKM_saturation.py -i $input -o output -r $refgene

		#if str($strand_type.strand_specific) == &quot;pair&quot;
			-d
			#if str($strand_type.pair_type) == &quot;sd&quot;
				'1++,1--,2+-,2-+'
			#else
				'1+-,1-+,2++,2--'
			#end if
		#end if

		#if str($strand_type.strand_specific) == &quot;single&quot;
			-d
			#if str($strand_type.single_type) == &quot;s&quot;
				'++,--'
			#else
				'+-,-+'
			#end if
		#end if

		-l $percentileFloor -u $percentileCeiling -s $percentileStep -c $rpkmCutoff
                2&gt; $outputlog
	</command>
	<inputs>
		<param format="bam" label="input bam/sam file" name="input" type="data"/>
		<param format="bed" label="Reference gene model" name="refgene" type="data"/>
		<conditional name="strand_type">
			<param label="Strand-specific?" name="strand_specific" type="select" value="None">
				<option value="none">None</option>
				<option value="pair">Pair-End RNA-seq</option>
				<option value="single">Single-End RNA-seq</option>
			</param>
			<when value="pair">
				<param display="radio" label="Pair-End Read Type (format: mapped --&gt; parent)" name="pair_type" type="select" value="sd">
					<option value="sd"> read1 (positive --&gt; positive; negative --&gt; negative), read2 (positive --&gt; negative; negative --&gt; positive)</option>
					<option value="ds">read1 (positive --&gt; negative; negative --&gt; positive), read2 (positive --&gt; positive; negative --&gt; negative)</option>
				</param>
			</when>
			<when value="single">
				<param display="radio" label="Single-End Read Type (format: mapped --&gt; parent)" name="single_type" type="select" value="s">
					<option value="s">positive --&gt; positive; negative --&gt; negative</option>
					<option value="d">positive --&gt; negative; negative --&gt; positive</option>
				</param>
			</when>
			<when value="none"/>
		</conditional>
		<param label="Begin sampling from this percentile (default=5)" name="percentileFloor" type="integer" value="5"/>
		<param label="End sampling at this percentile (default=100)" name="percentileCeiling" type="integer" value="100"/>
		<param label="Sampling step size (default=5)" name="percentileStep" type="integer" value="5"/>
		<param label="Ignore transcripts with RPKM smaller than this number (default=0.01)" name="rpkmCutoff" type="text" value="0.01"/>
	</inputs>
	<outputs>
		<data format="xls" from_work_dir="output.eRPKM.xls" label="${tool.name} on ${on_string}: RPKM PDF" name="outputxls"/>
		<data format="xls" from_work_dir="output.rawCount.xls" label="${tool.name} on ${on_string}: Raw Count XLS" name="outputrawxls"/>
		<data format="r" from_work_dir="output.saturation.r" label="${tool.name} on ${on_string}: R script" name="outputr"/>
		<data format="pdf" from_work_dir="output.saturation.pdf" label="${tool.name} on ${on_string}: Saturation PDF" name="outputpdf"/>
                <data format="txt" label="${tool.name} on ${on_string}: log" name="outputlog"/>
	</outputs>
	<help>
.. image:: https://code.google.com/p/rseqc/logo?cct=1336721062

-----

About RSeQC
+++++++++++

The RSeQC package provides a number of useful modules that can comprehensively evaluate high throughput sequence data especially RNA-seq data. “Basic modules” quickly inspect sequence quality, nucleotide composition bias, PCR bias and GC bias, while “RNA-seq specific modules” investigate sequencing saturation status of both splicing junction detection and expression estimation, mapped reads clipping profile, mapped reads distribution, coverage uniformity over gene body, reproducibility, strand specificity and splice junction annotation.

The RSeQC package is licensed under the GNU GPL v3 license.

Inputs
++++++++++++++

Input BAM/SAM file
	Alignment file in BAM/SAM format.

Reference gene model
	Gene model in BED format.

Strand sequencing type (default=none)
	See Infer Experiment tool if uncertain.

Options
++++++++++++++

Skip Multiple Hit Reads
	Use Multiple hit reads or use only uniquely mapped reads.

Only use exonic reads 
	Renders program only used exonic (UTR exons and CDS exons) reads, otherwise use all reads.

Output
++++++++++++++

1. output..eRPKM.xls: RPKM values for each transcript
2. output.rawCount.xls: Raw count for each transcript
3. output.saturation.r: R script to generate plot
4. output.saturation.pdf:

.. image:: http://dldcc-web.brc.bcm.edu/lilab/liguow/RSeQC/figure/saturation.png

- All transcripts were sorted in ascending order according to expression level (RPKM). Then they are divided into 4 groups:
	1. Q1 (0-25%): Transcripts with expression level ranked below 25 percentile.
	2. Q2 (25-50%): Transcripts with expression level ranked between 25 percentile and 50 percentile.
	3. Q3 (50-75%): Transcripts with expression level ranked between 50 percentile and 75 percentile.
	4. Q4 (75-100%): Transcripts with expression level ranked above 75 percentile.
- BAM/SAM file containing more than 100 million alignments will make module very slow.
- Follow example below to visualize a particular transcript (using R console)::
- output example
.. image:: http://dldcc-web.brc.bcm.edu/lilab/liguow/RSeQC/figure/saturation_eg.png

	</help>
</tool>