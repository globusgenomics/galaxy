<tool id="gemini_region" name="GEMINI region" version="GRABIX: 0.1.3; TABIX: 0.2.6; SAMTOOLS: 0.1.19; BEDTOOLS: 2.19.1">
    <description>Extracting variants from specific regions or genes</description>
    <requirements>
            <!--<requirement type="package" version="0.10.0">gemini</requirement>-->
            <requirement type="package">pymodules</requirement>
            <requirement type="package" version="0.1.3">grabix</requirement>
            <requirement type="package" version="0.2.6">tabix</requirement>
            <requirement type="package" version="0.1.19">samtools</requirement>
            <requirement type="package" version="2.19.1">bedtools</requirement>
            <yield/>
    </requirements>
    <version_command>gemini --version</version_command>
    <command>
<![CDATA[
        gemini region

            #if $region.region_selector == '--reg':
                #if str(${region.region}) != '':
                    --reg "${region.region}"
                #end if
            #else:
                #if str(${region.gene}) != '':
                    --gene "${region.gene}"
                #end if
            #end if

            #if $report.report_selector != 'all':
                --columns "${report.columns}"
            #end if

            #if $filter.filter_selector == 'yes':
                --filter "${filter.filter}"
            #end if

            $header
            "${ infile }"
            > "${ outfile }"
]]>
    </command>
    <stdio>
            <exit_code range="1:"/>
            <exit_code range=":-1"/>
            <regex match="Error:"/>
            <regex match="Exception:"/>
    </stdio>
    <inputs>
        <param format="sqlite" label="GEMINI database" name="infile" type="data"/>

        <conditional name="region">
            <param help="" label="Select by ...?" name="region_selector" type="select">
                <option value="--reg">genomic coordinates</option>
                <option value="--gene">gene name</option>
            </param>
            <when value="--reg">
                <param help="e.g. chr1:100-200 (--reg)" label="Specify genomic region" name="region" type="text"/>
            </when>
            <when value="--gene">
                <param help="e.g. PTPN22 (--gene)" label="Specify gene name" name="gene" type="text"/>
            </when>
        </conditional>

        <conditional name="report">
            <param help="By default, this tool reports all columns in the variants table. One may choose to report only a subset of the columns." label="Columns to include in the report" name="report_selector" type="select">
                <option selected="True" value="all">all</option>
                <option value="column_filter">User given columns</option>
            </param>
            <when value="all"/>
            <when value="column_filter">
                <param display="checkboxes" help="(--columns)" label="Choose columns to include in the report" multiple="True" name="columns" type="select">
                    <option value="gene">gene</option>
                    <option value="chrom">chrom</option>
                    <option value="start">start</option>
                    <option value="end">end</option>
                    <option value="ref">ref</option>
                    <option value="alt">alt</option>
                    <option value="impact">impact</option>
                    <option value="impact_severity">impact_severity</option>
                </param>
            </when>
        </conditional>
        <conditional name="filter">
            <param help="By default, this tool will report all variants regardless of their putative functional impact. In order to apply additional constraints on the variants returned, you can this optional filter." label="Apply additional constraints" name="filter_selector" type="select">
                <option value="no">No additional constraints</option>
                <option value="yes">Apply additional constraints</option>
            </param>
            <when value="no"/>
            <when value="yes">
                <param help="Conditions applied here will become WHERE clauses in the query issued to the GEMINI database. E.g. alt='G' or impact_severity = 'HIGH'. (--filter)" label="Contraints in SQL syntax" name="filter" size="20" type="text">
                    <sanitizer invalid_char="">
                        <valid initial="string.printable">
                        </valid>
                    </sanitizer>
                </param>
            </when>
        </conditional>


        <param checked="False" falsevalue="" help="(--header)" label="Add a header of column names to the output" name="header" truevalue="--header" type="boolean"/>
    </inputs>
    <outputs>
        <data format="tabular" label="${tool.name} on ${on_string}" name="outfile"/>
    </outputs>
    <tests>
        <test>
        </test>
    </tests>
    <help>
**What it does**

One often is concerned with variants found solely in a particular gene or genomic region.

@CITATION@
    </help>
    <citations>
        <citation type="doi">10.1371/journal.pcbi.1003153</citation>
        <yield/>
    </citations>
</tool>