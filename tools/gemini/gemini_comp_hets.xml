<tool id="gemini_comp_hets" name="GEMINI comp_hets" version="GRABIX: 0.1.3; TABIX: 0.2.6; SAMTOOLS: 0.1.19; BEDTOOLS: 2.19.1">
    <description>Identifying potential compound heterozygotes</description>
    <requirements>
            <!--<requirement type="package" version="0.10.0">gemini</requirement>-->
            <requirement type="package">pymodules</requirement>
            <requirement type="package" version="0.1.3">grabix</requirement>
            <requirement type="package" version="0.2.6">tabix</requirement>
            <requirement type="package" version="0.1.19">samtools</requirement>
            <requirement type="package" version="2.19.1">bedtools</requirement>
            <yield/>
    </requirements>
    <version_command>gemini --version</version_command>
    <command>
<![CDATA[
        gemini comp_hets

            #if $report.report_selector != 'all':
                --columns "${report.columns}"
            #end if

            #if $filter.filter_selector == 'yes':
                --filter "${filter.filter}"
            #end if
            $only_affected
            $ignore_phasing

            "${ infile }"
            > "${ outfile }"
]]>
    </command>
    <stdio>
            <exit_code range="1:"/>
            <exit_code range=":-1"/>
            <regex match="Error:"/>
            <regex match="Exception:"/>
    </stdio>
    <inputs>
        <param format="sqlite" label="GEMINI database" name="infile" type="data"/>
        <param checked="False" falsevalue="" help="(--header)" label="Add a header of column names to the output" name="header" truevalue="--header" type="boolean"/>
        <conditional name="report">
            <param help="By default, this tool reports all columns in the variants table. One may choose to report only a subset of the columns." label="Columns to include in the report" name="report_selector" type="select">
                <option selected="True" value="all">all</option>
                <option value="column_filter">User given columns</option>
            </param>
            <when value="all"/>
            <when value="column_filter">
                <param display="checkboxes" help="(--columns)" label="Choose columns to include in the report" multiple="True" name="columns" type="select">
                    <option value="gene">gene</option>
                    <option value="chrom">chrom</option>
                    <option value="start">start</option>
                    <option value="end">end</option>
                    <option value="ref">ref</option>
                    <option value="alt">alt</option>
                    <option value="impact">impact</option>
                    <option value="impact_severity">impact_severity</option>
                </param>
            </when>
        </conditional>
        <param checked="False" falsevalue="" help="(--only-affected)" label="Report solely those compund heterozygotes impacted a sample labeled as affected" name="only_affected" truevalue="--only-affected" type="boolean"/>
        <param checked="False" falsevalue="" help="Candidates are inherently putative. (--ignore-phasing)" label="Ignore phasing when screening for compound hets" name="ignore_phasing" truevalue="--ignore-phasing" type="boolean"/>
        <conditional name="filter">
            <param help="By default, this tool will report all variants regardless of their putative functional impact. In order to apply additional constraints on the variants returned, you can this optional filter." label="Apply additional constraints" name="filter_selector" type="select">
                <option value="no">No additional constraints</option>
                <option value="yes">Apply additional constraints</option>
            </param>
            <when value="no"/>
            <when value="yes">
                <param help="Conditions applied here will become WHERE clauses in the query issued to the GEMINI database. E.g. alt='G' or impact_severity = 'HIGH'. (--filter)" label="Contraints in SQL syntax" name="filter" size="20" type="text">
                    <sanitizer invalid_char="">
                        <valid initial="string.printable">
                        </valid>
                    </sanitizer>
                </param>
            </when>
        </conditional>
    </inputs>
    <outputs>
        <data format="tabular" label="${tool.name} on ${on_string}" name="outfile"/>
    </outputs>
    <tests>
        <test>
        </test>
    </tests>
    <help>
**What it does**

Many recessive disorders are caused by compound heterozygotes. Unlike canonical recessive sites where the same recessive allele is 
inherited from both parents at the _same_ site in the gene, compound heterozygotes occur when the individualâ€™s phenotype is caused 
by two heterozygous recessive alleles at _different_ sites in a particular gene.

So basically, we are looking for two (typically loss-of-function (LoF)) heterozygous variants impacting the same gene at different loci. 
The complicating factor is that this is _recessive_ and as such, we must also require that the consequential alleles at each heterozygous 
site were inherited on different chromosomes (one from each parent). As such, in order to use this tool, we require that all variants are phased. 
Once this has been done, the comp_hets tool will provide a report of candidate compound heterozygotes for each sample/gene.


@CITATION@
    </help>
    <citations>
        <citation type="doi">10.1371/journal.pcbi.1003153</citation>
        <yield/>
    </citations>
</tool>