<tool id="contra_tool_swift" name="Contra Copy number analysis" version="BEDTOOLS: 2.17.0; SAMTOOLS: 0.1.18; CONTRA: CONTRA.v2.0.4">
  <description>: Copy Number Analysis for Targeted Resequencing (Swift)</description>
  <requirements>
    <requirement type="package" version="2.17.0">bedtools</requirement>
    <requirement type="package" version="0.1.18">samtools</requirement>
    <requirement type="package">R</requirement>
    <requirement type="package">contra</requirement>
    <requirement type="package">pymodules</requirement>
    <requirement type="package">ruby</requirement>
    <requirement type="package">swift</requirement>
  </requirements>
  <stdio>
    <exit_code description="Error running tool" level="fatal" range="1:"/>
  </stdio>
  <command interpreter="python">
	contra_swift.py
        --stdout $output_log
        --out-dir $output_log.extra_files_path
        --output $output_log
        --log $output_swift_log

	##Ref Genome
	#if $genomeSource.refGenomeSource == "history":
          -p "-f ${genomeSource.ownFile}"
        #else:
        ##use precomputed indexes
          -p "-f ${genomeSource.indices.fields.path}"
	#end if

        ## input files
        ## "-s $alignment_file"
        #if $input_dir_source.input_dir_source_type == "text":
            --input_dir ${input_dir_source.input_directory_path}
        #else:
            --input_dir_file ${input_dir_source.input_directory_path_file}
        #end if

	
	##Required files
        -t $target_file
	#if $controlSource.refControlSource == "history":
          -p "-c ${controlSource.control_file}"
        #else if $controlSource.refControlSource == "build":
          --trim $controlSource.trim
          --percent-bam-files-for-baseline $controlSource.percent_bam_to_use
          #if str($controlSource.group_batch_cond.group_batch_select) == "no":
            --baseline-input-bam all
          #else:
            --baseline-input-bam group
            --group-field $controlSource.group_batch_cond.group_field
            #if str($controlSource.group_batch_cond.group_keyword.group) == "yes":
              --keyword-separator $controlSource.group_batch_cond.group_keyword.separator
              --keyword-field-order $controlSource.group_batch_cond.group_keyword.field_order
            #end if
          #end if
        #else:
          ##use precomputed indexes
          -p "-c ${controlSource.indices.fields.path}"
        #end if
	
	##Optional parameter
        
        #if $option.option == "modify_parameters": 
          -p "--numBin $option.numBin"
          -p "--minReadDepth $option.minReadDepth"
          -p "--minNBases $option.minNbases"
		
		#if str($option.sam) == "true":
                  -p "--sam"
        	#end if
        	
        	#if str($option.bed) == "true":
                  -p "--bed"
        	#end if
        	
                -p "--pval $option.pval"
      	        --sampleName $option.sampleName
		
		#if str($option.nomultimapped) == "true":
                  -p "--nomultimapped"
        	#end if
        	
        	#if str($option.plot) == "true":
                  -p "--plot"
        	#end if
        	
                -p "--minExon $option.minExon"
                -p "--minControlRdForCall $option.minControlRdForCall"
                -p "--minTestRdForCall $option.minTestRdForCall"
                -p "--minAvgForCall $option.minAvgForCall"
                #if str($option.regionSize_cond.regionSize) == "true":
                    -p "--maxRegionSize $option.regionSize_cond.maxRegionSize"
                    -p "--targetRegionSize $option.regionSize_cond.targetRegionSize"
        	#end if
        	#if str($option.largeDeletion_cond.largeDeletion) == "true":
                  -p "--largeDeletion"
                  -p "--smallSegment $option.largeDeletion_cond.smallSegment"
                        -p "--largeSegment $option.largeDeletion_cond.largeSegment"
        	#end if
        	
                -p "--lrCallStart $option.lrCallStart"
                -p "--lrCallEnd $option.lrCallEnd"
                -p "--passSize $option.passSize"
        #end if
	
	##File to generate the bam list
	##--contra-output $html_file
	##--contra-dir $html_file.extra_files_path
        ##--contra-vcf $output_vcf
        ##--contra-txt $output_txt
  </command>
    <inputs>
      <conditional name="genomeSource">
        <param label="Will you select a reference from your history or use a built-in fasta file?" name="refGenomeSource" type="select">
          <option value="indexed">Use a built-in index</option>
          <option value="history">Use one from the history</option>
        </param>
        <when value="indexed">
          <param label="Select a reference genome" name="indices" type="select">
            <options from_data_table="all_fasta">
              <filter column="2" type="sort_by"/>
              <validator message="No indexes are available" type="no_options"/>
            </options>
          </param>
        </when>
        <when value="history">
          <param format="fasta" label="Select a reference from history" name="ownFile" type="data"/>
        </when>
      </conditional>
      <param format="bed" help="" name="target_file" optional="false" label="Target regions (bed)" type="data"/>		

      <conditional name="input_dir_source">
        <param help="If you choose the file based method, it must contain only one line with the path for your files" label="How will you enter the directory path for your BAM/BAI files?" name="input_dir_source_type" type="select">
          <option value="text">Text Field</option>
          <option selected="True" value="file">File</option>
        </param>
        <when value="text">
          <param area="True" help="Please input the full path of the directory that contains a set of BAM files. All the BAM files will be used as input datasets." label="BAM directory path" name="input_directory_path" size="2x40" type="text"/>
        </when>
        <when value="file">
          <param format="txt" help="Must contain only one line with the path for your files" label="File containing path of the directory containing the BAM files" name="input_directory_path_file" type="data"/>
        </when>
      </conditional>

      <conditional name="controlSource">
        <param label="Will you select a reference from your history or use a built-in control file?" name="refControlSource" type="select">
          <option value="indexed">Use a built-in control</option>
          <option value="history">Use baseline from the history</option>
          <option value="build">Build baseline from input BAMs</option>
        </param>
        <when value="build">
          <param name="percent_bam_to_use" type="float" value="1.0" min="0.1" max="1.0" label="Percentage of random BAM files in your input to use to create the baseline" />
          <param name="trim" optional="true" type="float" value="0.2"/>
          <conditional name="group_batch_cond">
            <param name="group_batch_select" label="Do input BAMs need to be grouped by a field in the RG information" type="select" help="If no groups need to be generated from the input BAMs, one baseline will be created for all input BAMs using Contra Baseline tool. If groups need to be created, each group will have its own baseline file generated.">
              <option value="yes" selected="True">Generate a baseline for each group</option>
              <option value="no">Use all input BAMs to create one baseline</option>
            </param>
            <when value="no"></when>
            <when value="yes">
	      <param name="group_field" type="select" label="Read Group field to group BAMs by" >
		<option value="ID">ID</option>
		<option value="CN">CN</option>
		<option value="DS">DS</option>
		<option value="DT">DT</option>
		<option value="FO">FO</option>
		<option value="KS">KS</option>
		<option value="LB">LB</option>
		<option value="PG">PG</option>
		<option value="PI">PI</option>
		<option value="PL">PL</option>
		<option value="PM">PM</option>
		<option value="PU">PU</option>
		<option value="SM">SM</option>
	      </param>
	      <conditional name="group_keyword">
		<param name="group" type="select" label="Does label in the RG field contain a keyword that should be separated" help="i.e. MEGA1_N100, MEGA1_N102, MEGA2_N105 where MEGA1 and MEGA2 are the different groups that need to be created" >
		  <option value="no" selected="True">No</option>
		  <option value="yes">Yes</option>
		</param>
		<when value="no"></when>
		<when value="yes">
		  <param name="separator" type="text" label="Separator character" help="The character that should be used to separate in the BAM RG field name. I.E. In the above example the underscore character (_) would be the separator." />
		  <param name="field_order" value="1" type="integer" label="Field number that contains the Group name" help="I.E. In the above example the field number would be 1 because we want to use the first part of the ID field (MEGA) to group BAMs by." />
		</when>
	      </conditional>
            </when>
          </conditional>
        </when>
        <when value="indexed">
	  <param label="Select a baseline control" name="indices" type="select">
	    <options from_data_table="baseline_files">
	      <filter column="2" type="sort_by"/>
	      <validator message="No files available" type="no_options"/>
	    </options>
	  </param>
	</when>
	<when value="history">
	  <param format="bam,sam,bed,tabular" help="" name="control_file" optional="false" type="data"/>
	</when>
      </conditional>
		
      <conditional name="option">
        <param help="" label="Optional Parameters" name="option" optional="true" type="select">
	  <option selected="true" value="default_parameters">Default Parameters</option>
	  <option value="modify_parameters">Modify Parameters</option>
	</param>
	<when value="modify_parameters">
	  <param name="numBin" optional="true" type="integer" value="20"/>
	  <param name="minReadDepth" optional="true" type="integer" value="10"/>
	  <param name="minNbases" optional="true" type="integer" value="10"/>
	  <param help="" label="sam" name="sam" optional="true" type="select">
	    <option value="true">true</option>
	    <option selected="true" value="false">false</option>
	  </param>
	  <param help="" label="bed" name="bed" optional="true" type="select">
	    <option value="true">true</option>
	    <option selected="true" value="false">false</option>
	  </param>
	  <param name="pval" optional="true" type="float" value="0.05"/>
	  <param name="sampleName" optional="true" type="text" value="Contra_Output"/>
	  <param help="" label="no multimapped" name="nomultimapped" optional="true" type="select">
	    <option value="true">true</option>
	    <option selected="true" value="false">false</option>
	  </param>
	  <param help="" label="plot" name="plot" optional="true" type="select">
	    <option value="true">true</option>
	    <option selected="true" value="false">false</option>
	  </param>
	  <param name="minExon" optional="true" type="integer" value="2000"/>
	  <param name="minControlRdForCall" optional="true" type="integer" value="5"/>
	  <param name="minTestRdForCall" optional="true" type="integer" value="0"/>
	  <param name="minAvgForCall" optional="true" type="integer" value="20"/>
          <conditional name="regionSize_cond">
            <param help="Default is 0" label="Set max Region size" name="regionSize" type="select">
              <option selected="True" value="false">No</option>
              <option value="true">Yes</option>
            </param>
            <when value="false"/>
            <when value="true">
              <param name="maxRegionSize" optional="true" type="integer" value="0"/>
              <param name="targetRegionSize" optional="true" type="integer" value="200"/>
            </when>
          </conditional>
          <conditional name="largeDeletion_cond">
	    <param help="" label="large deletion" name="largeDeletion" optional="true" type="select">
	      <option value="true">true</option>
	      <option selected="true" value="false">false</option>
	    </param>
	    <when value="true">
              <param name="smallSegment" optional="true" type="integer" value="1"/>
              <param name="largeSegment" optional="true" type="integer" value="25"/>
            </when>
            <when value="false"/>
          </conditional>
	  <param name="lrCallStart" optional="true" type="float" value="-0.3"/>
	  <param name="lrCallEnd" optional="true" type="float" value="0.3"/>
	  <param name="passSize" optional="true" type="float" value="0.5"/>
	</when>
      </conditional>	
    </inputs>
    <outputs>
      <data format="html" label="${tool.name} on ${on_string} (log)" name="output_log"/>
      <data format="pdf" label="${tool.name} on ${on_string} (summary)" name="output_swift_log"/>
    </outputs>
    <help>
|


**Reference**
	http://contra-cnv.sourceforge.net/

-----

**What it does**

CONTRA is a tool for copy number variation (CNV) detection for targeted resequencing data such as those from whole-exome capture data. CONTRA calls copy number gains and losses for each target region with key strategies include the use of base-level log-ratios to remove GC-content bias, correction for an imbalanced library size effect on log-ratios, and the estimation of log-ratio variations via binning and interpolation. It takes standard alignment formats (BAM/SAM) and output in variant call format (VCF 4.0) for easy integration with other next generation sequencing analysis package.


-----
 
**Required Parameters**

::

  -t, --target         Target region definition file [BED format] 

  -s, --test           Alignment file for the test sample [BAM/SAM] 

  -c, --control        Alignment file for the control sample 
                       [BAM/SAM/BED – baseline file]

  --bed                **option has to be supplied for control
                       with baseline file.** 

  -f, --fasta          Reference genome [FASTA]

  -o, --outFolder      the folder name (and its path) to store the output 
                       of the analysis (this new folder will be created – 
                       error message occur if the folder exists) 

-----

**Optional Parameters**

::

  --numBin              Numbers of bins to group the regions. User can 
                        specify multiple experiments with different numbers
                        of bins (comma separated). [Default: 20] 

  --minReadDepth        The threshold for minimum read depth for each bases 
                        (see Step 2 in CONTRA workflow) [Default: 10] 

  --minNBases           The threshold for minimum number of bases for each 
                        target regions (see Step 2 in CONTRA workflow) 
                        [Default: 10] 

  --sam                 If the specified test and control samples are in 
                        SAM format. [Default: False] (It will always take 
                        BAM samples as default) 

  --bed                 If specified, control will be a baseline file in 
                        BED format. [Default: False] 
                        Please refer to the Baseline Script section for 
                        instruction how to create baseline files from set 
                        of BAMfiles. A set of baseline files from different 
                        platform have also been provided in the CONTRA 
                        download page. 

  --pval                The p-value threshold for filtering. Based on Adjusted 
                        P-Values. Only regions that pass this threshold will 
                        be included in the VCF file. [Default: 0.05] 

  --sampleName          The name to be appended to the front of the default output 
                        name. By default, there will be nothing appended. 

  --nomultimapped       The option to remove multi-mapped reads 
                        (using SAMtools with mapping quality &gt; 0). 
                        [default: FALSE] 

  -p, --plot            If specified, plots of log-ratio distribution for each 
                        bin will be included in the output folder [default: FALSE] 

  --minExon             Minimum number of exons in one bin (if less than this number
                        , bin that contains small number of exons will be merged to 
                        the adjacent bins) [Default : 2000] 

  --minControlRdForCall Minimum Control ReadDepth for call [Default: 5] 

  --minTestRdForCall    Minimum Test ReadDepth for call [Default: 0] 

  --minAvgForCall       Minimum average coverage for call [Default: 20] 

  --maxRegionSize       Maximum region size in target region (for breaking 
                        large regions into smaller regions. By default, 
                        maxRegionSize=0 means no breakdown). [Default : 0] 

  --targetRegionSize    Target region size for breakdown (if maxRegionSize 
                        is non-zero) [Default: 200] 

  -l, --largeDeletion   If specified, CONTRA will run large deletion analysis (CBS).
                        User must have DNAcopy R-library installed to run the 
                        analysis. [False] 

  --smallSegment        CBS segment size for calling large variations [Default : 1] 

  --largeSegment        CBS segment size for calling large variations [Default : 25] 

  --lrCallStart         Log ratios start range that will be used to call CNV 
                        [Default : -0.3] 

  --lrCallEnd           Log ratios end range that will be used to call CNV 
                        [Default : 0.3] 

  --passSize            Size of exons that passed the p-value threshold compare 
                        to the original exons size [Default: 0.5] 
    </help>
</tool>
