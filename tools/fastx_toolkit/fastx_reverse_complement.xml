<tool id="cshl_fastx_reverse_complement" name="Reverse-Complement" version="FASTX_TOOLKIT: 0.0.13">
	<description/>
	<requirements><requirement type="package">fastx_toolkit</requirement></requirements>
	<command>zcat -f '$input' | fastx_reverse_complement -v -o $output
#if $input.ext == &quot;fastqsanger&quot;:
-Q 33
#end if
	</command>
	<inputs>
		<param format="fasta,fastqsolexa,fastqsanger" label="Library to reverse-complement" name="input" type="data"/>
	</inputs>

	<tests>
		<test>
			<!-- Reverse-complement a FASTA file -->
			<param name="input" value="fastx_rev_comp1.fasta"/> 
			<output file="fastx_reverse_complement1.out" name="output"/>
		</test>
		<test>
			<!-- Reverse-complement a FASTQ file -->
			<param ftype="fastqsolexa" name="input" value="fastx_rev_comp2.fastq"/>
			<output file="fastx_reverse_complement2.out" name="output"/>
		</test>
	</tests>

  
	<outputs>
		<data format="input" metadata_source="input" name="output"/>
	</outputs>

<help>
**What it does**

This tool reverse-complements each sequence in a library.
If the library is a FASTQ, the quality-scores are also reversed.
  
--------

**Example**

Input FASTQ file::

    @CSHL_1_FC42AGWWWXX:8:1:3:740
    TGTCTGTAGCCTCNTCCTTGTAATTCAAAGNNGGTA
    +CSHL_1_FC42AGWWWXX:8:1:3:740
    33 33 33 34 33 33 33 33 33 33 33 33 27 5 27 33 33 33 33 33 33 27 21 27 33 32 31 29 26 24 5 5 15 17 27 26


Output FASTQ file::

    @CSHL_1_FC42AGWWWXX:8:1:3:740
    TACCNNCTTTGAATTACAAGGANGAGGCTACAGACA
    +CSHL_1_FC42AGWWWXX:8:1:3:740
    26 27 17 15 5 5 24 26 29 31 32 33 27 21 27 33 33 33 33 33 33 27 5 27 33 33 33 33 33 33 33 33 34 33 33 33

------

This tool is based on `FASTX-toolkit`__ by Assaf Gordon.

 .. __: http://hannonlab.cshl.edu/fastx_toolkit/
 
</help>
</tool>