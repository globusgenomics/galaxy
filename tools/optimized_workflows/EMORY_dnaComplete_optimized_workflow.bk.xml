<tool id="EMORY_globus_dnaComplete_optimized_bk" name="EMORY: DNA Whole Genome Analisys Optimized Workflow" version="BWA: 0.7.12; SAMTOOLS: 1.2; SAMBAMBA: v0.5.4; PICARD: 1.134; GATK3: GenomeAnalysisTK-3.4-46; JAVA: jre1.7.0_51" >
  <description>Alignment to GATK PrintReads </description>
  <action module="galaxy_ext.globus.tools.actions.globus" class="GlobusTransfer"/>
  <parallelism method="basic"/>
  <requirements>
    <requirement type="package">bwa</requirement>
    <requirement type="package">samtools</requirement>
    <requirement type="package">sambamba</requirement>
    <requirement type="package">picard</requirement>
    <requirement type="package">gatk3</requirement>
    <requirement type="package">pymodules</requirement>
    <requirement type="package">java</requirement>
  </requirements>
  <command interpreter="python">
    EMORY_dnaComplete_optimized_04202016.bk.py 
      ##use precomputed indexes
    -u $username
    -k $userkey
    -c $usercert
    --goauth-token "$goauth"
    --source-ep="$from_endpoint"
    --source-path="$from_path"
    --destination-ep=$to_endpoint
    --destination-path="$to_path"
    --type $path_type
    --out-transfer-log $out_file1

      --bwa-ref "${bwa_indices.fields.path}"

      ## GATK reference files
      --gatk-ref "${gatk_ref_file.fields.path}"

      ## output files
      --final-ep $to_endpoint_final
      --output-bam $output_bam
      --remote-bam $to_path_bam
      --output-vcf $output_vcf
      --remote-vcf $to_path_vcf
      --output-log $output_log
      
      #if $readGroup.specReadGroup == "yes"
        --rgid "$readGroup.rgid"
        --rglb "$readGroup.rglb"
        --rgpl "$readGroup.rgpl"
        --rgsm "$readGroup.rgsm"
      #end if
      &gt;  $output_log
  </command>
  <inputs>
     <param name="goauth" type="hidden" size="100" label="Globus Auth Token">
      <sanitizer>
        <valid>
          <add value="|"/>
        </valid>
      </sanitizer>
    </param>
    <param name="username" type="hidden" size="100" label="Globus Username"/>
    <param name="userkey" type="hidden" size="100" label="Globus User Key"/>
    <param name="usercert" type="hidden" size="100" label="Globus User Certificate"/>
    <param name="globuscert" type="hidden" size="100" label="Globus Certificate"/>
    <param name="get_data_flag" type="hidden" size="100" label="Send or Receive data"/>
    <param name="path_type" type="hidden" value="receive" size="100" label="Is this a directory or a file path"/>
    <param name="from_endpoint" type="gsrc_endpoint" label="Source Endpoint">
      <sanitizer sanitize="False"/>
    </param>
    <param name="from_path" type="gsrc_path" size="100" label="Source Path">
      <sanitizer sanitize="False"/>
    </param>
    <param name="to_endpoint" type="hidden" size="100" label="Destination Endpoint">
      <sanitizer sanitize="False"/>
    </param>
    <param name="to_path" type="hidden" size="100" label="Destination Path">
      <sanitizer sanitize="False"/>
    </param>

    <param label="BWA reference genome" name="bwa_indices" type="select">
      <options from_data_table="bwa_0710_indexes">
        <filter column="2" type="sort_by"/>
        <validator message="No indexes are available" type="no_options"/>
      </options>
    </param>
    <conditional name="readGroup">
      <param label="Specify the read group for this file? (samse/sampe -r)" name="specReadGroup" type="select">
        <option selected="True" value="yes">Yes</option>
        <option value="no">No</option>
      </param>
      <when value="yes">
        <param help="Required if RG specified. Read group IDs may be modiﬁed when merging SAM ﬁles in order to handle collisions." label="Read group identiﬁer (ID). Each @RG line must have a unique ID. The value of ID is used in the RG tags of alignment records. Must be unique among all read groups in header section." name="rgid" optional="False" size="25" type="text"/>
        <param help="Required if RG specified" label="Library name (LB)" name="rglb" optional="False" size="25" type="text"/>
        <param help="Required if RG specified. Valid values : CAPILLARY, LS454, ILLUMINA, SOLID, HELICOS, IONTORRENT and PACBIO" label="Platform/technology used to produce the reads (PL)" name="rgpl" optional="False" size="25" type="text"/>
        <param help="Required if RG specified. Use pool name where a pool is being sequenced" label="Sample (SM)" name="rgsm" optional="False" size="25" type="text"/>
      </when>
      <when value="no"/>
    </conditional>
    <param help="It should match up with the reference used in BWA step" label="GATK reference genome" name="gatk_ref_file" type="select">
      <options from_data_table="gatk3_picard_indexes"/>
    </param>
    <param label="Just the hidden name" name="hidden_name" type="hidden" value="OUTPUT_NAME"/>
    <param name="to_endpoint_final" type="text" size="100" label="Destination Endpoint to transfer output files">
      <sanitizer sanitize="False"/>
    </param>
    <param name="to_path_bam" type="text" size="100" label="Destination Path for output BAM file">
      <sanitizer sanitize="False"/>
    </param>
    <param name="to_path_vcf" type="text" size="100" label="Destination Path for output VCF file">
      <sanitizer sanitize="False"/>
    </param>
  </inputs>
  <outputs>
    <data format="txt" label="${tool.name} on GlobusTransfer (transfer log)" name="out_file1" />
    <data format="bam" label="${tool.name} on ${$hidden_name}.bam" name="output_bam"/>
    <data format="vcf" label="${tool.name} on ${$hidden_name}.vcf" name="output_vcf"/>
`   <data format="txt" label="${tool.name} on ${$hidden_name}.log" name="output_log"/>
  </outputs>
  <tests>
    <test>
    </test>
  </tests> 
  <help>

**What it does**

  </help>
</tool>
