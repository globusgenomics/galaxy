<tool id="HLI_RNAseqQC_optimized" name="RNA-Seq QC Optimized Workflow" version="SAMTOOLS: 1.2; BOWTIE2: 2.1.0; PICARD: 1.134; JAVA: jre1.7.0_51; TOPHAT2: 2.0.14; QUALIMAP: qualimap_v2.1.1; RSEQC: 2.3.3">
  <description/>
  <!--<action class="GlobusOptimizedWorkflows" module="galaxy_ext.globus.tools.actions.globus"/>-->
  <parallelism method="basic"/>
  <requirements>
    <requirement type="package">tophat2</requirement>
    <requirement type="package">samtools</requirement>
    <requirement type="package">bowtie2</requirement>
    <requirement type="package">rseqc</requirement>
    <requirement type="package">qualimap</requirement>
    <requirement type="package">picard</requirement>
    <requirement type="package">pymodules</requirement>
    <requirement type="package">java</requirement>
    <requirement type="package">ucsc_tools</requirement>
  </requirements>
  <command interpreter="python">
    ## get the file names
    #import os, glob
    #set $path = ""
    #if os.path.exists(str($input_type_selector.input1.extra_files_path)):
      #set $path = $input_type_selector.input1.extra_files_path
    #else:
      #set $fh = open(str($input_type_selector.input1), "r")
      #set $path = $fh.readline().rstrip("\n")
    #end if

    HLI_RNASeqQC_optimized_08242015.py --sample-name $sample 
      #if str($input_type_selector.input_format) == "single_input":
        --inputDir $path
      #else:
        --inputDir $path/$input_type_selector.input_sample_name
      #end if

      ##use precomputed indexes
      --tophat2-ref "${tophat2_index.fields.path}"
      --picard-ref "${picard_index.fields.path}"

      ## GTF file
      --gtf $gtf_file

      ## output vcf file
      --output-tophat-bam $output_tophat_bam
      --output-tophat-log $output_tophat_log
      --output-picard-markDuplicates-html $output_picard_markDuplicates_html
      --output-picard-markDuplicates-directory $output_picard_markDuplicates_html.extra_files_path
      --output-picard-shortReadGCBias $output_picard_shortReadGCBias
      --output-picard-shortReadGCBias-directory $output_picard_shortReadGCBias.extra_files_path
      --output-picard-insertSize $output_picard_insertSize
      --output-picard-insertSize-directory $output_picard_insertSize.extra_files_path
      --output-picard-alignmentSummary $output_picard_alignmentSummary
      --output-picard-alignmentSummary-directory $output_picard_alignmentSummary.extra_files_path
      --output-picard-collectRnaSeqSummary $output_picard_collectRnaSeqSummary
      --output-picard-collectRnaSeqSummary-directory $output_picard_collectRnaSeqSummary.extra_files_path
      --output-tophatStats $output_tophatStats
      --output-rseqc-readQuality $output_rseqc_readQuality
      --output-rseqc-readNVC $output_rseqc_readNVC
      --output-rseqc-readGC $output_rseqc_readGC
      --output-rseqc-junctionSaturation $output_rseqc_junctionSaturation
      --output-rseqc-junctionAnnotation-events $output_rseqc_junctionAnnotation_events
      --output-rseqc-junctionAnnotation-junction $output_rseqc_junctionAnnotation_junction
      --output-rseqc-readDuplication $output_rseqc_readDuplication
      ##--output-qualimap $output_qualimap
      --output-log $output_log

      ## globus parameters
      ##--username $username
      ##--goauth-token "$goauth"
      ##--source-ep=$from_endpoint
      ##--destination-ep="$to_endpoint"
      ##--destination-dir="$to_dir"
      ##--deadline=1200
      >  $output_log
  </command>
  <inputs>
    <param name="sample" type="text" format="txt" label="Sample label" />
    <conditional name="input_type_selector">
      <param help="" label="Format of the input dataset object file" name="input_format" type="select">
        <option value="single_input">Single Sample Object: Specify Input Dataset Object containting single sample</option>
        <option value="multiple_input">Multiple Sample Object: Specify Sample in Dataset Object</option>
      </param>
      <when value="single_input">
        <param name="input1" type="data" label="Input Fastq Data Object for single sample" help="Must contain Fastq Files in a Dataset object (i.e. All fastq files must be in the same directory. One sample per object"/>
      </when>
      <when value="multiple_input">
          <param format="tabular,text" help="The dataset object should create the multiple samples inside the directory." label="Input Fastq Data Object for multiple samples" name="input1" type="data"/>
          <param label="Sample Name inside the Fastq output directory" name="input_sample_name" optional="False" type="text"/>
      </when>
    </conditional>

    <param help="If your genome of interest is not listed, contact the GlobusGenomics team" label="Select a Tophat reference genome" name="tophat2_index" type="select">
      <options from_data_table="tophat2_indexes"/>
    </param>
    <param format="gtf" label="Gene Model Annotation file" name="gtf_file" type="data"/>

    <param help="Should be the similar to the reference genome chosen for Tophat" label="Select a Picard built-in reference genome" name="picard_index" type="select">
      <options from_data_table="all_fasta">
      </options>
    </param>

    <!--<param label="Just the hidden name" name="hidden_name" type="hidden" value="OUTPUT_NAME"/>
    <param name="goauth" type="hidden" size="100" label="Globus Auth Token">
      <sanitizer>
        <valid>
          <add value="|"/>
        </valid>
      </sanitizer>
    </param>
    <param name="username" type="hidden" size="100" label="Globus Username"/>
    <param name="from_endpoint" type="hidden" size="100" label="Source Endpoint">
      <sanitizer sanitize="False"/>
    </param>
    <param name="to_endpoint" type="gdst_endpoint" size="100" label="Destination Endpoint">
      <sanitizer sanitize="False"/>
    </param>
    <param name="to_dir" type="text" size="100" label="Destination Directory on user's endpoint to store output files">
      <sanitizer sanitize="False"/>
    </param>
    -->
  </inputs>
  <outputs>
    <data format="bam" label="${tool.name}: Tophat2 Align BAM" name="output_tophat_bam"/>
    <data format="txt" label="${tool.name}: Tophat2 Align Summary" name="output_tophat_log"/>
    <data format="html" label="${tool.name}: Picard MarkDups Metrics" name="output_picard_markDuplicates_html"/>
    <data format="html" label="${tool.name}: Picard ShortReadGCBias Metrics" name="output_picard_shortReadGCBias"/>
    <data format="html" label="${tool.name}: Picard InsertionSize Metrics" name="output_picard_insertSize"/>
    <data format="html" label="${tool.name}: Picard AlignmentSummary Metrics" name="output_picard_alignmentSummary"/>
    <data format="html" label="${tool.name}: Picard CollectRnaSeqSummary Metrics" name="output_picard_collectRnaSeqSummary"/>
    <data format="txt" label="${tool.name}: TophatStatsPE Metrics" name="output_tophatStats"/>
    <data format="pdf" label="${tool.name}: RseqQC ReadQuality" name="output_rseqc_readQuality"/>
    <data format="pdf" label="${tool.name}: RseqQC ReadNVC" name="output_rseqc_readNVC"/>
    <data format="pdf" label="${tool.name}: RseqQC ReadGC" name="output_rseqc_readGC"/>
    <data format="pdf" label="${tool.name}: RseqQC ReadJunctionSaturation" name="output_rseqc_junctionSaturation"/>
    <data format="pdf" label="${tool.name}: RseqQC JunctionAnnotation Splice Events" name="output_rseqc_junctionAnnotation_events"/>
    <data format="pdf" label="${tool.name}: RseqQC JunctionAnnotation SpliceJunction" name="output_rseqc_junctionAnnotation_junction"/>
    <data format="pdf" label="${tool.name}: RseqQC ReadDuplication" name="output_rseqc_readDuplication"/>
    <!--<data format="html" label="${tool.name} on ${sample}.html: Qualimap bamqc" name="output_qualimap"/>-->
    <data format="txt" label="${tool.name}: Log" name="output_log"/>
  </outputs>
  <tests>
    <test>
    </test>
  </tests> 
  <help>

**What it does**

  </help>
</tool>
