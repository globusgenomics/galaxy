<tool id="join_multiple_bags" name="Join Multiple Tab-delimited Datasets" version="2.0.2">
  <description>side by side on the first column (bags)</description>
  <command interpreter="bash">join_multiple.sh 
  #if str($input_source_cond.input_source) == "file":
    $input_source_cond.input1 $input_source_cond.input2
    #for $input_file in $input_source_cond.input_files:
      ${input_file.additional_input}
    #end for
  #else:
    #import os, glob
    #if os.path.exists(str($input_source_cond.input_file.extra_files_path)):
      #set $path = $input_source_cond.input_file.extra_files_path
    #else:
      #set $fh = open(str($input_source_cond.input_file), "r")
      #set $path = "%s/data" % ($fh.readline().rstrip("\n"))
    #end if
    #set $files = glob.glob("%s/*/*.tabular" % $path)
    #set $number_of_files = len($files)
    #if $number_of_files > 0:
      #set $inputs = " ".join($files)
      $inputs
    #end if
    #for $extra_input_file in $input_source_cond.input_bags:
      #if os.path.exists(str($extra_input_file.additional_input_file.extra_files_path)):
        #set $path = $extra_input_file.additional_input_file.extra_files_path
      #else:
        #set $fh = open(str($extra_input_file.additional_input_file), "r")
        #set $path = "%s/data" % ($fh.readline().rstrip("\n"))
      #end if
      #set $files = glob.glob("%s/*/*.tabular" % $path)
      #set $number_of_files = len($files)
      #if $number_of_files > 0:
        #set $inputs = " ".join($files)
        $inputs
      #end if
    #end for
  #end if
  > $out_file1
  </command>
  <inputs>
    <conditional name="input_source_cond">
      <param name="input_source" type="select" label="Input Source" >
        <option value="file" selected="True">History</option>
        <option value="bag">Dataset Bag</option>
      </param>
      <when value="file">
        <param format="tabular" name="input1" type="data" label="Join"/>
        <param format="tabular" name="input2" type="data" label="with" />
        <repeat name="input_files" title="Additional HTSeq-Count Input Files">
          <param format="tabular" name="additional_input" type="data" label="Join additional Tab-delimited files" help=""/>
        </repeat>
      </when>
      <when value="bag">
        <param format="txt" name="input_file" type="data" label="Input directory of samples" />
        <repeat name="input_bags" title="Additional Input Bags">
          <param format="txt" name="additional_input_file" type="data" label="Input directory of samples" />
        </repeat>
      </when>
    </conditional>
  </inputs>
  <outputs>
     <data format="tabular" name="out_file1" />
  </outputs>
  <help>

.. class:: warningmark

**This tool will attempt to reuse the metadata from your first input.** To change metadata assignments click on the "edit attributes" link of the history item generated by this tool.

.. class:: infomark

**TIP:** If your data is not TAB delimited, use *Text Manipulation-&gt;Convert*

-----

**Syntax**

This tool joins lines of two datasets on a common field. An empty string ("") is not a valid identifier.
You may choose to include lines of your first input that do not join with your second input.

- Columns are referenced with a **number**. For example, **3** refers to the 3rd column of a tab-delimited file.

-----

**Example**

Dataset1::

  chr1 10 20 geneA 
  chr1 50 80 geneB
  chr5 10 40 geneL

Dataset2::

  geneA tumor-supressor
  geneB Foxp2
  geneC Gnas1
  geneE INK4a

Joining the 4th column of Dataset1 with the 1st column of Dataset2 will yield::

  chr1 10 20 geneA geneA tumor-suppressor
  chr1 50 80 geneB geneB Foxp2


</help>
</tool>
